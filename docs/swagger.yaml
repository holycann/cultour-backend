definitions:
  github_com_holycann_cultour-backend_internal_achievement_models.Badge:
    description: Comprehensive model for tracking and managing user achievements Provides
      a structured representation of badges with unique identifiers, metadata, and
      timestamps
    properties:
      created_at:
        description: |-
          Timestamp when the badge was created
          @Description Precise timestamp of badge creation in UTC
          @Description Helps track the badge's lifecycle and origin
          @Example "2023-06-15T14:30:00Z"
          @Format date-time
        type: string
      description:
        description: |-
          Badge description
          @Description Detailed explanation of how to earn the badge
          @Description Provides context and motivation for users to achieve this badge
          @Example "Discovered and visited 50 unique locations across the platform"
          @MaxLength 500
        maxLength: 500
        type: string
      icon_url:
        description: |-
          URL to badge icon
          @Description Full URL pointing to the visual representation of the badge
          @Description Should be a high-quality, recognizable icon or image
          @Example "https://cdn.example.com/badges/master-explorer.png"
          @Format uri
        format: uri
        type: string
      id:
        description: |-
          Unique identifier for the badge
          @Description Globally unique UUID for the badge, generated automatically
          @Example "550e8400-e29b-41d4-a716-446655440000"
          @Format uuid
        type: string
      name:
        description: |-
          Badge name
          @Description Human-readable, distinctive name for the badge
          @Description Represents the achievement or milestone
          @Example "Master Explorer"
          @Required true
          @MinLength 2
          @MaxLength 100
        maxLength: 100
        minLength: 2
        type: string
      updated_at:
        description: |-
          Timestamp when the badge was last updated
          @Description Precise timestamp of the last modification to the badge in UTC
          @Description Indicates when badge details were last changed
          @Example "2023-06-16T10:15:00Z"
          @Format date-time
        type: string
    required:
    - name
    type: object
  github_com_holycann_cultour-backend_internal_achievement_models.BadgeCreate:
    description: Payload structure for creating a new badge in the system Provides
      the necessary details to mint a new achievement badge
    properties:
      description:
        description: |-
          Badge description
          @Description Detailed explanation of how to earn the badge
          @Description Provides clear guidance on achievement criteria
          @Example "Climbed peaks in 5 different mountain ranges"
          @MaxLength 500
        maxLength: 500
        type: string
      icon_url:
        description: |-
          URL to badge icon
          @Description Full URL pointing to the visual representation of the badge
          @Description Should be a high-quality, recognizable icon
          @Example "https://cdn.example.com/badges/mountain-conqueror.png"
          @Format uri
        format: uri
        type: string
      name:
        description: |-
          Badge name
          @Description Human-readable name for the new badge
          @Description Must be unique and descriptive
          @Example "Mountain Conqueror"
          @Required true
          @MinLength 2
          @MaxLength 100
        maxLength: 100
        minLength: 2
        type: string
    required:
    - name
    type: object
  github_com_holycann_cultour-backend_internal_achievement_models.BadgeDTO:
    description: Lightweight data transfer object for badge details Used for API responses
      to provide a clean, minimal representation of badges
    properties:
      created_at:
        description: |-
          Timestamp when the badge was created
          @Description Precise timestamp of badge creation in UTC
          @Example "2023-06-15T14:30:00Z"
          @Format date-time
        type: string
      description:
        description: |-
          Badge description
          @Description Detailed explanation of how to earn the badge
          @Example "Discovered and visited 50 unique locations across the platform"
        type: string
      icon_url:
        description: |-
          URL to badge icon
          @Description Full URL pointing to the visual representation of the badge
          @Example "https://cdn.example.com/badges/master-explorer.png"
          @Format uri
        type: string
      id:
        description: |-
          Unique identifier for the badge
          @Description Globally unique UUID for the badge
          @Example "550e8400-e29b-41d4-a716-446655440000"
          @Format uuid
        type: string
      name:
        description: |-
          Badge name
          @Description Human-readable name of the badge
          @Example "Master Explorer"
        type: string
      updated_at:
        description: |-
          Timestamp when the badge was last updated
          @Description Precise timestamp of the last modification to the badge in UTC
          @Example "2023-06-16T10:15:00Z"
          @Format date-time
        type: string
    type: object
  github_com_holycann_cultour-backend_internal_achievement_models.BadgeUpdate:
    description: Payload structure for updating existing badge details Supports partial
      updates with optional fields
    properties:
      description:
        description: |-
          Badge description
          @Description Updated explanation of how to earn the badge
          @Description Optional field for refining achievement criteria
          @Example "Discovered and visited 75 unique locations across the platform"
          @MaxLength 500
        maxLength: 500
        type: string
      icon_url:
        description: |-
          URL to badge icon
          @Description Updated URL pointing to the visual representation of the badge
          @Description Optional field for updating badge visual
          @Example "https://cdn.example.com/badges/advanced-explorer.png"
          @Format uri
        format: uri
        type: string
      id:
        description: |-
          Unique identifier for the badge
          @Description Globally unique UUID of the badge to be updated
          @Description Must match an existing badge in the system
          @Example "550e8400-e29b-41d4-a716-446655440000"
          @Required true
          @Format uuid
        type: string
      name:
        description: |-
          Badge name
          @Description Updated human-readable name for the badge
          @Description Optional field for renaming the badge
          @Example "Advanced Explorer"
          @MinLength 2
          @MaxLength 100
        maxLength: 100
        minLength: 2
        type: string
    required:
    - id
    type: object
  github_com_holycann_cultour-backend_internal_cultural_models.EventDTO:
    description: Structured representation of event data for API responses Includes
      related entities and provides a clean, comprehensive view of event information
    properties:
      city:
        allOf:
        - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.City'
        description: |-
          City details
          @Description City where the event is taking place
          @Description Helps users understand the event's urban context
      created_at:
        description: |-
          Event creation time
          @Description Timestamp of when the event was first created in the system
          @Format date-time
        type: string
      creator:
        allOf:
        - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.User'
        description: |-
          Event creator details
          @Description Information about the user who created the event
          @Description Enables attribution and trust
      description:
        description: |-
          Event description
          @Description Detailed explanation of the event's purpose, activities, and highlights
          @Example "A vibrant music festival featuring local and international artists"
        type: string
      end_date:
        description: |-
          Event end date
          @Description Official end date and time of the event
          @Format date-time
        type: string
      id:
        description: |-
          Unique identifier for the event
          @Description Globally unique UUID for the event
          @Example "event_123"
          @Format uuid
        type: string
      image_url:
        description: |-
          Event image URL
          @Description Public URL pointing to the event's primary image
          @Example "https://example.com/event_image.jpg"
          @Format uri
        type: string
      is_kid_friendly:
        description: |-
          Whether the event is kid-friendly
          @Description Indicates if the event is suitable for children
          @Example true
        type: boolean
      location:
        allOf:
        - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.Location'
        description: |-
          Location details
          @Description Detailed information about the event's location
          @Description Provides geographical context and navigation information
      name:
        description: |-
          Event name
          @Description Official name of the cultural event
          @Example "Summer Music Festival"
        type: string
      province:
        allOf:
        - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.Province'
        description: |-
          Province details
          @Description Province or region hosting the event
          @Description Provides broader geographical information
      start_date:
        description: |-
          Event start date
          @Description Official start date and time of the event
          @Format date-time
        type: string
      views:
        additionalProperties:
          type: integer
        description: |-
          Number of views for the event
          @Description Total number of times the event has been viewed
          @Description Helps track event popularity and engagement
          @Example 13
        type: object
    type: object
  github_com_holycann_cultour-backend_internal_discussion_models.CreateMessage:
    description: Structured payload for message creation and update operations Supports
      flexible input for different message types
    properties:
      content:
        description: |-
          Message content
          @Description Actual text content of the message
          @Description Must be provided during message creation
          @Example "Hello, this is a discussion message"
          @MaxLength 1000
        maxLength: 1000
        type: string
      id:
        description: |-
          Unique identifier for the message (optional for creation)
          @Description Optional UUID for the message during creation or update
          @Description Used to identify specific messages during updates
          @Example "message_123"
          @Format uuid
        type: string
      sender_id:
        description: |-
          Reference to the user who sent the message
          @Description Optional user ID for message sender
          @Description Typically set automatically during message creation
          @Example "user_789"
          @Format uuid
        type: string
      thread_id:
        description: |-
          Reference to the thread the message belongs to
          @Description Unique identifier linking the message to a specific discussion thread
          @Description Required for message context and organization
          @Example "thread_456"
          @Format uuid
        type: string
      type:
        allOf:
        - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.MessageType'
        description: |-
          Type of message
          @Description Optional message type specification
          @Description Defaults to discussion type if not specified
          @Example "discussion"
        enum:
        - discussion
        - ai
    required:
    - content
    - thread_id
    type: object
  github_com_holycann_cultour-backend_internal_discussion_models.CreateThread:
    description: Structured payload for thread creation and update operations Supports
      flexible input for thread initialization and modification
    properties:
      creator_id:
        description: |-
          Reference to the user who created the thread
          @Description Optional user ID for thread creator
          @Description Typically set automatically during thread creation
          @Example "user_789"
          @Format uuid
        type: string
      event_id:
        description: |-
          Reference to the related event
          @Description Unique identifier linking the thread to a specific event
          @Description Required for thread context and organization
          @Example "event_456"
          @Format uuid
        type: string
      id:
        description: |-
          Unique identifier for the thread (optional for creation)
          @Description Optional UUID for the thread during creation or update
          @Description Used to identify specific threads during updates
          @Example "thread_123"
          @Format uuid
        type: string
      status:
        description: |-
          Thread status
          @Description Optional thread status specification
          @Description Defaults to 'active' if not specified
          @Example "active"
          @Enum active,closed,archived
        enum:
        - active
        - closed
        - archived
        type: string
    required:
    - event_id
    type: object
  github_com_holycann_cultour-backend_internal_discussion_models.MessageDTO:
    description: Comprehensive message data transfer object with additional context
      Used for API responses to provide rich message information
    properties:
      content:
        description: |-
          Message content
          @Description Actual text content of the message
          @Example "Hello, this is a discussion message"
        type: string
      created_at:
        description: |-
          Timestamp when the message was created
          @Description Precise timestamp of message creation in UTC
          @Format date-time
        type: string
      id:
        description: |-
          Unique identifier for the message
          @Description Globally unique UUID for the message
          @Example "message_123"
          @Format uuid
        type: string
      sender:
        allOf:
        - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.User'
        description: |-
          Sender's profile details
          @Description Comprehensive information about the message sender
          @Description Provides context and attribution for the message
      thread_id:
        description: |-
          Reference to the thread the message belongs to
          @Description Unique identifier linking the message to a specific discussion thread
          @Example "thread_456"
          @Format uuid
        type: string
      type:
        allOf:
        - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.MessageType'
        description: |-
          Type of message
          @Description Categorizes the message based on its origin or purpose
          @Example "discussion"
      updated_at:
        description: |-
          Timestamp when the message was last updated
          @Description Precise timestamp of the last modification to the message in UTC
          @Format date-time
        type: string
    type: object
  github_com_holycann_cultour-backend_internal_discussion_models.MessageType:
    description: Enumeration of possible message types in the discussion platform
      Allows differentiation between user-generated and AI-generated messages
    enum:
    - discussion
    - ai
    type: string
    x-enum-varnames:
    - DiscussionMessageType
    - AIMessageType
  github_com_holycann_cultour-backend_internal_discussion_models.Participant:
    description: Detailed participant entry with thread and user references
    properties:
      joined_at:
        description: Timestamp when the user joined the thread
        type: string
      thread_id:
        description: |-
          Unique identifier for the thread
          @example "thread_123"
        type: string
      updated_at:
        description: Timestamp when the participant entry was last updated
        type: string
      user_id:
        description: |-
          Reference to the user participating in the thread
          @example "user_789"
        type: string
    required:
    - thread_id
    - user_id
    type: object
  github_com_holycann_cultour-backend_internal_discussion_models.ThreadDTO:
    description: Comprehensive data transfer object for thread details Used for API
      responses to provide rich thread information with related entities
    properties:
      created_at:
        description: |-
          Timestamp when the thread was created
          @Description Precise timestamp of thread creation in UTC
          @Format date-time
        type: string
      creator:
        allOf:
        - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.User'
        description: |-
          Creator's profile details
          @Description Comprehensive information about the thread creator
          @Description Provides context and attribution for the thread
      discussion_participants:
        description: |-
          List of participants in the thread
          @Description Detailed list of users participating in the discussion
          @Description Helps track engagement and thread membership
        items:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.Participant'
        type: array
      event_id:
        description: |-
          Reference to the related event
          @Description Unique identifier linking the thread to a specific event
          @Description Enables contextual discovery and event-based communication
          @Example "event_456"
          @Format uuid
        type: string
      id:
        description: |-
          Unique identifier for the thread
          @Description Globally unique UUID for the thread
          @Example "thread_123"
          @Format uuid
        type: string
      status:
        description: |-
          Thread status
          @Description Current state of the discussion thread
          @Description Indicates thread accessibility and lifecycle stage
          @Example "active"
          @Enum active,closed,archived
        type: string
      updated_at:
        description: |-
          Timestamp when the thread was last updated
          @Description Precise timestamp of the last modification to the thread in UTC
          @Format date-time
        type: string
    type: object
  github_com_holycann_cultour-backend_internal_place_models.City:
    description: Comprehensive model for tracking and managing city information Provides
      a structured representation of cities with detailed metadata and geographical
      context
    properties:
      created_at:
        description: |-
          Timestamp when the city was created
          @Description Precise timestamp of city record creation in UTC
          @Description Helps track city information lifecycle and origin
          @Format date-time
        type: string
      description:
        description: |-
          City description
          @Description Detailed explanation of the city's characteristics, history, or significance
          @Description Provides context and additional information about the city
          @Example "The capital city of Indonesia"
          @MaxLength 500
        maxLength: 500
        type: string
      id:
        description: |-
          Unique identifier for the city
          @Description Globally unique UUID for the city, generated automatically
          @Description Serves as the primary key and reference for the city
          @Example "city_123"
          @Format uuid
        type: string
      image_url:
        description: |-
          URL of the city's image
          @Description Public URL pointing to a representative image of the city
          @Description Serves as a visual representation for the city
          @Format uri
        type: string
      name:
        description: |-
          City name
          @Description Official name of the city
          @Description Provides a clear, distinctive identifier for the location
          @Example "Jakarta"
          @MinLength 2
          @MaxLength 100
        maxLength: 100
        minLength: 2
        type: string
      province_id:
        description: |-
          ID of the province where the city is located
          @Description Unique identifier linking the city to its parent province
          @Description Enables hierarchical geographical organization
          @Format uuid
        type: string
      updated_at:
        description: |-
          Timestamp when the city was last updated
          @Description Precise timestamp of the last modification to the city details in UTC
          @Description Indicates when city information was last changed
          @Format date-time
        type: string
    required:
    - name
    type: object
  github_com_holycann_cultour-backend_internal_place_models.CityCreate:
    description: Structured payload for city creation operations Supports input for
      initializing new city records
    properties:
      description:
        description: |-
          City description
          @Description Detailed explanation of the city's characteristics
          @Description Provides context and additional information
          @Example "The capital city of Indonesia"
          @MaxLength 500
        maxLength: 500
        type: string
      image_url:
        description: |-
          URL of the city's image
          @Description Optional public URL pointing to a representative image
          @Description Serves as a visual representation for the city
          @Format uri
        type: string
      name:
        description: |-
          City name
          @Description Official name of the new city
          @Description Must be unique and descriptive
          @Example "Jakarta"
          @MinLength 2
          @MaxLength 100
        maxLength: 100
        minLength: 2
        type: string
      province_id:
        description: |-
          ID of the province where the city is located
          @Description Unique identifier of the parent province
          @Description Required for geographical organization
          @Format uuid
        type: string
    required:
    - name
    - province_id
    type: object
  github_com_holycann_cultour-backend_internal_place_models.CityDTO:
    description: Comprehensive data transfer object for city details Used for API
      responses to provide rich city information with related entities
    properties:
      created_at:
        description: |-
          Timestamp when the city was created
          @Description Precise timestamp of city record creation in UTC
          @Format date-time
        type: string
      description:
        description: |-
          City description
          @Description Detailed explanation of the city's characteristics
          @Example "The capital city of Indonesia"
        type: string
      id:
        description: |-
          Unique identifier for the city
          @Description Globally unique UUID for the city
          @Example "city_123"
          @Format uuid
        type: string
      image_url:
        description: |-
          URL of the city's image
          @Description Public URL pointing to a representative image of the city
          @Format uri
        type: string
      name:
        description: |-
          City name
          @Description Official name of the city
          @Example "Jakarta"
        type: string
      province:
        allOf:
        - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.Province'
        description: |-
          Province details
          @Description Comprehensive information about the province containing the city
          @Description Provides broader geographical context
      province_id:
        description: |-
          ID of the province where the city is located
          @Description Unique identifier of the parent province
          @Format uuid
        type: string
      updated_at:
        description: |-
          Timestamp when the city was last updated
          @Description Precise timestamp of the last modification to the city details in UTC
          @Format date-time
        type: string
    type: object
  github_com_holycann_cultour-backend_internal_place_models.CityUpdate:
    description: Structured payload for city update operations Supports partial updates
      with optional fields
    properties:
      description:
        description: |-
          City description
          @Description Updated description of the city's characteristics
          @Description Optional field for refining city information
          @Example "The expanded capital region of Indonesia"
          @MaxLength 500
        maxLength: 500
        type: string
      id:
        description: |-
          Unique identifier for the city
          @Description Globally unique UUID of the city to be updated
          @Description Must match an existing city in the system
          @Example "city_123"
          @Format uuid
        type: string
      image_url:
        description: |-
          URL of the city's image
          @Description Optional update for the city's representative image
          @Description Allows changing the visual representation
          @Format uri
        type: string
      name:
        description: |-
          City name
          @Description Updated official name for the city
          @Description Optional field for renaming the city
          @Example "Jakarta Raya"
          @MinLength 2
          @MaxLength 100
        maxLength: 100
        minLength: 2
        type: string
      province_id:
        description: |-
          ID of the province where the city is located
          @Description Optional update for the city's parent province
          @Description Allows changing the geographical context
          @Format uuid
        type: string
    required:
    - id
    type: object
  github_com_holycann_cultour-backend_internal_place_models.Location:
    description: Comprehensive model for tracking and managing precise geographical
      points Provides a structured representation of locations with detailed geospatial
      information
    properties:
      city_id:
        description: |-
          ID of the city where the location is located
          @Description Unique identifier linking the location to its parent city
          @Description Enables hierarchical geographical organization
          @Format uuid
        type: string
      created_at:
        description: |-
          Timestamp when the location was created
          @Description Precise timestamp of location record creation in UTC
          @Description Helps track location information lifecycle and origin
          @Format date-time
        type: string
      id:
        description: |-
          Unique identifier for the location
          @Description Globally unique UUID for the location, generated automatically
          @Description Serves as the primary key and reference for the location
          @Example "location_123"
          @Format uuid
        type: string
      latitude:
        description: |-
          Latitude in decimal degrees
          @Description Geographic latitude coordinate for precise location mapping
          @Description Represents the north-south position on the Earth's surface
          @Example -6.175392
        type: number
      longitude:
        description: |-
          Longitude in decimal degrees
          @Description Geographic longitude coordinate for precise location mapping
          @Description Represents the east-west position on the Earth's surface
          @Example 106.827153
        type: number
      name:
        description: |-
          Name of the location
          @Description Official or descriptive name of the geographical point
          @Description Provides a clear, distinctive identifier for the location
          @Example "Monas"
          @MinLength 2
          @MaxLength 100
        maxLength: 100
        minLength: 2
        type: string
      updated_at:
        description: |-
          Timestamp when the location was last updated
          @Description Precise timestamp of the last modification to the location details in UTC
          @Description Indicates when location information was last changed
          @Format date-time
        type: string
    required:
    - city_id
    - latitude
    - longitude
    - name
    type: object
  github_com_holycann_cultour-backend_internal_place_models.LocationCreate:
    description: Structured payload for location creation operations Supports input
      for initializing new location records with geospatial data
    properties:
      city_id:
        description: |-
          ID of the city where the location is located
          @Description Unique identifier of the parent city
          @Description Required for geographical organization
          @Format uuid
        type: string
      latitude:
        description: |-
          Latitude in decimal degrees
          @Description Geographic latitude coordinate for precise location mapping
          @Description Represents the north-south position on the Earth's surface
          @Example -6.175392
        type: number
      longitude:
        description: |-
          Longitude in decimal degrees
          @Description Geographic longitude coordinate for precise location mapping
          @Description Represents the east-west position on the Earth's surface
          @Example 106.827153
        type: number
      name:
        description: |-
          Location name
          @Description Official or descriptive name of the new location
          @Description Must be unique and descriptive
          @Example "Monas"
          @MinLength 2
          @MaxLength 100
        maxLength: 100
        minLength: 2
        type: string
    required:
    - city_id
    - latitude
    - longitude
    - name
    type: object
  github_com_holycann_cultour-backend_internal_place_models.LocationDTO:
    description: Comprehensive data transfer object for location details Used for
      API responses to provide rich location information with related entities
    properties:
      city:
        allOf:
        - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.City'
        description: |-
          City details
          @Description Comprehensive information about the city containing the location
          @Description Provides broader geographical context
      city_id:
        description: |-
          ID of the city where the location is located
          @Description Unique identifier of the parent city
          @Format uuid
        type: string
      created_at:
        description: |-
          Timestamp when the location was created
          @Description Precise timestamp of location record creation in UTC
          @Format date-time
        type: string
      id:
        description: |-
          Unique identifier for the location
          @Description Globally unique UUID for the location
          @Example "location_123"
          @Format uuid
        type: string
      latitude:
        description: |-
          Latitude in decimal degrees
          @Description Geographic latitude coordinate for precise location mapping
          @Example -6.175392
        type: number
      longitude:
        description: |-
          Longitude in decimal degrees
          @Description Geographic longitude coordinate for precise location mapping
          @Example 106.827153
        type: number
      name:
        description: |-
          Name of the location
          @Description Official or descriptive name of the geographical point
          @Example "Monas"
        type: string
      updated_at:
        description: |-
          Timestamp when the location was last updated
          @Description Precise timestamp of the last modification to the location details in UTC
          @Format date-time
        type: string
    type: object
  github_com_holycann_cultour-backend_internal_place_models.LocationUpdate:
    description: Structured payload for location update operations Supports partial
      updates with optional fields
    properties:
      city_id:
        description: |-
          ID of the city where the location is located
          @Description Optional update for the location's parent city
          @Description Allows changing the geographical context
          @Format uuid
        type: string
      id:
        description: |-
          Unique identifier for the location
          @Description Globally unique UUID of the location to be updated
          @Description Must match an existing location in the system
          @Example "location_123"
          @Format uuid
        type: string
      latitude:
        description: |-
          Latitude in decimal degrees
          @Description Optional update for the location's latitude coordinate
          @Description Allows precise geospatial repositioning
          @Example -6.175392
        type: number
      longitude:
        description: |-
          Longitude in decimal degrees
          @Description Optional update for the location's longitude coordinate
          @Description Allows precise geospatial repositioning
          @Example 106.827153
        type: number
      name:
        description: |-
          Location name
          @Description Updated name for the location
          @Description Optional field for renaming the location
          @Example "National Monument"
          @MinLength 2
          @MaxLength 100
        maxLength: 100
        minLength: 2
        type: string
    required:
    - id
    type: object
  github_com_holycann_cultour-backend_internal_place_models.Province:
    description: Comprehensive model for tracking and managing administrative regions
      Provides a structured representation of provinces with detailed geographical
      context
    properties:
      created_at:
        description: |-
          Timestamp when the province was created
          @Description Precise timestamp of province record creation in UTC
          @Description Helps track province information lifecycle and origin
          @Format date-time
        type: string
      description:
        description: |-
          Province description
          @Description Detailed explanation of the province's characteristics, history, or significance
          @Description Provides context and additional information about the administrative region
          @Example "A beautiful province with rich cultural heritage"
          @MaxLength 500
        maxLength: 500
        type: string
      id:
        description: |-
          Unique identifier for the province
          @Description Globally unique UUID for the province, generated automatically
          @Description Serves as the primary key and reference for the province
          @Example "province_123"
          @Format uuid
        type: string
      name:
        description: |-
          Province name
          @Description Official name of the administrative region
          @Description Provides a clear, distinctive identifier for the province
          @Example "West Java"
          @MinLength 2
          @MaxLength 100
        maxLength: 100
        minLength: 2
        type: string
      updated_at:
        description: |-
          Timestamp when the province was last updated
          @Description Precise timestamp of the last modification to the province details in UTC
          @Description Indicates when province information was last changed
          @Format date-time
        type: string
    required:
    - name
    type: object
  github_com_holycann_cultour-backend_internal_place_models.ProvinceCreate:
    description: Structured payload for province creation operations Supports input
      for initializing new province records
    properties:
      description:
        description: |-
          Province description
          @Description Detailed explanation of the province's characteristics
          @Description Provides context and additional information
          @Example "A beautiful province with rich cultural heritage"
          @MaxLength 500
        maxLength: 500
        type: string
      name:
        description: |-
          Province name
          @Description Official name of the new administrative region
          @Description Must be unique and descriptive
          @Example "West Java"
          @MinLength 2
          @MaxLength 100
        maxLength: 100
        minLength: 2
        type: string
    required:
    - name
    type: object
  github_com_holycann_cultour-backend_internal_place_models.ProvinceDTO:
    description: Comprehensive data transfer object for province details Used for
      API responses to provide rich province information with related entities
    properties:
      created_at:
        description: |-
          Timestamp when the province was created
          @Description Precise timestamp of province record creation in UTC
          @Format date-time
        type: string
      description:
        description: |-
          Province description
          @Description Detailed explanation of the province's characteristics
          @Example "A beautiful province with rich cultural heritage"
        type: string
      id:
        description: |-
          Unique identifier for the province
          @Description Globally unique UUID for the province
          @Example "province_123"
          @Format uuid
        type: string
      name:
        description: |-
          Province name
          @Description Official name of the administrative region
          @Example "West Java"
        type: string
      updated_at:
        description: |-
          Timestamp when the province was last updated
          @Description Precise timestamp of the last modification to the province details in UTC
          @Format date-time
        type: string
    type: object
  github_com_holycann_cultour-backend_internal_place_models.ProvinceUpdate:
    description: Structured payload for province update operations Supports partial
      updates with optional fields
    properties:
      description:
        description: |-
          Province description
          @Description Updated description of the province's characteristics
          @Description Optional field for refining province information
          @Example "An expanded province with diverse cultural landscapes"
          @MaxLength 500
        maxLength: 500
        type: string
      id:
        description: |-
          Unique identifier for the province
          @Description Globally unique UUID of the province to be updated
          @Description Must match an existing province in the system
          @Example "province_123"
          @Format uuid
        type: string
      name:
        description: |-
          Province name
          @Description Updated name for the administrative region
          @Description Optional field for renaming the province
          @Example "Greater West Java"
          @MinLength 2
          @MaxLength 100
        maxLength: 100
        minLength: 2
        type: string
    required:
    - id
    type: object
  github_com_holycann_cultour-backend_internal_users_models.User:
    description: Comprehensive model for tracking and managing user account information
      Provides a structured representation of user authentication and account details
    properties:
      created_at:
        description: |-
          Timestamp when the user account was created
          @Description Precise timestamp of user account creation in UTC
          @Description Helps track user lifecycle and origin
          @Format date-time
        type: string
      email:
        description: |-
          User's email address
          @Description Unique email used for authentication and communication
          @Description Must be a valid, unique email address
          @Example "john.doe@example.com"
          @Format email
        type: string
      id:
        description: |-
          Unique identifier for the user
          @Description Globally unique UUID for the user account, generated automatically
          @Description Serves as the primary key and reference for the user
          @Example "user_123"
          @Format uuid
        type: string
      phone:
        description: |-
          User's phone number
          @Description Unique phone number for user contact and authentication
          @Description Optional field for additional user identification
          @Example "+1234567890"
          @Format phone
        type: string
      role:
        description: |-
          User's role in the system
          @Description Defines the user's access level and permissions
          @Description Determines system-wide access control
          @Example "user"
          @Enum user,admin,moderator
        enum:
        - user
        - admin
        - moderator
        type: string
      updated_at:
        description: |-
          Timestamp when the user account was last updated
          @Description Precise timestamp of the last modification to the user account in UTC
          @Description Indicates when user information was last changed
          @Format date-time
        type: string
    required:
    - email
    - role
    type: object
  github_com_holycann_cultour-backend_internal_users_models.UserBadgeDTO:
    description: Comprehensive data transfer object for user badge details Used for
      API responses to provide rich user achievement information
    properties:
      badge:
        allOf:
        - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_achievement_models.Badge'
        description: |-
          Full badge details
          @Description Comprehensive information about the earned badge
          @Description Provides context and details of the specific achievement
      badge_id:
        description: |-
          Badge identifier
          @Description Unique identifier of the badge earned by the user
          @Example "explorer"
          @Format uuid
        example: explorer
        type: string
      created_at:
        description: |-
          Timestamp when the badge was earned
          @Description Precise timestamp of when the user acquired the badge
          @Description Helps track the user's achievement progression
          @Format date-time
        type: string
      updated_at:
        description: |-
          Timestamp of the last user badge update
          @Description Precise timestamp of the last modification to the user badge record
          @Description Indicates any changes or updates to the badge status
          @Format date-time
        type: string
    type: object
  github_com_holycann_cultour-backend_internal_users_models.UserBadgePayload:
    description: Structured payload for user badge management operations Supports
      creating or removing user badge associations
    properties:
      badge_id:
        description: |-
          Badge identifier
          @Description Unique identifier of the badge to be assigned or removed
          @Description Must be a valid badge in the system
          @Example "explorer"
          @Format uuid
        example: explorer
        type: string
      user_id:
        description: |-
          Associated user ID
          @Description Unique identifier of the user receiving the badge
          @Description Must be a valid user account
          @Example "user_123"
          @Format uuid
        example: user_123
        type: string
    required:
    - badge_id
    - user_id
    type: object
  github_com_holycann_cultour-backend_internal_users_models.UserCreate:
    description: Structured payload for user account creation operations Supports
      initializing new user accounts with authentication details
    properties:
      email:
        description: |-
          User's email address
          @Description Unique email for user registration
          @Description Must be a valid, unique email address
          @Example "john.doe@example.com"
          @Format email
        type: string
      password:
        description: |-
          User's password for account authentication
          @Description Password for local email-based authentication
          @Description Must meet minimum security requirements
          @MinLength 8
        minLength: 8
        type: string
      phone:
        description: |-
          User's phone number
          @Description Optional phone number for user contact
          @Example "+1234567890"
          @Format phone
        type: string
      role:
        default: user
        description: |-
          User's role during account creation
          @Description Specifies the initial role for the user account
          @Description Optional field with a default value of "user"
          @Example "user"
          @Enum user,admin,moderator
        enum:
        - user
        - admin
        - moderator
        type: string
    required:
    - email
    type: object
  github_com_holycann_cultour-backend_internal_users_models.UserDTO:
    description: Comprehensive data transfer object for user details Used for API
      responses to provide rich user information with controlled exposure
    properties:
      created_at:
        description: |-
          Timestamp when the user account was created
          @Description Precise timestamp of user account creation in UTC
          @Format date-time
        type: string
      email:
        description: |-
          User's email address
          @Description Unique email used for communication
          @Example "john.doe@example.com"
          @Format email
        type: string
      id:
        description: |-
          Unique identifier for the user
          @Description Globally unique UUID for the user account
          @Example "user_123"
          @Format uuid
        type: string
      phone:
        description: |-
          User's phone number
          @Description Optional phone number for user contact
          @Example "+1234567890"
          @Format phone
        type: string
      role:
        description: |-
          User's role in the system
          @Description Defines the user's access level and permissions
          @Example "user"
          @Enum user,admin,moderator
        type: string
      updated_at:
        description: |-
          Timestamp when the user account was last updated
          @Description Precise timestamp of the last modification to the user account in UTC
          @Format date-time
        type: string
    type: object
  github_com_holycann_cultour-backend_internal_users_models.UserProfileCreate:
    description: Structured payload for user profile creation operations Supports
      input for initializing new user profile records
    properties:
      avatar_url:
        description: |-
          URL to user's avatar image
          @Description Public URL pointing to the user's profile picture
          @Description Optional field for profile visual representation
          @Example "https://example.com/avatar.jpg"
          @Format uri
        format: uri
        type: string
      bio:
        description: |-
          User's biographical information
          @Description Personal description, interests, or professional background
          @Description Optional field for additional user context
          @Example "Software engineer passionate about building great products"
          @MaxLength 500
        maxLength: 500
        type: string
      fullname:
        description: |-
          User's full name
          @Description Official or preferred full name of the user
          @Description Optional during creation, can be updated later
          @Example "John Doe"
          @MinLength 2
          @MaxLength 100
        maxLength: 100
        minLength: 2
        type: string
      identity_image_url:
        description: |-
          URL to uploaded KTP image
          @Description Public URL of the user's official government-issued ID
          @Description Optional field for identity verification
          @Example "https://example.com/ktp.jpg"
          @Format uri
        format: uri
        type: string
      user_id:
        description: |-
          Associated user ID (only for creation)
          @Description Unique identifier of the user for whom the profile is being created
          @Description Must be a valid, unique user account
          @Example "user_123"
          @Format uuid
        type: string
    type: object
  github_com_holycann_cultour-backend_internal_users_models.UserProfileDTO:
    description: Comprehensive data transfer object for user profile details Used
      for API responses to provide rich user profile information
    properties:
      avatar_url:
        description: |-
          URL to user's avatar image
          @Description Public URL pointing to the user's profile picture
          @Example "https://example.com/avatar.jpg"
          @Format uri
        type: string
      bio:
        description: |-
          User's biographical information
          @Description Personal description, interests, or professional background
          @Example "Software engineer passionate about building great products"
        type: string
      created_at:
        description: |-
          Timestamp when the profile was created
          @Description Precise timestamp of user profile creation in UTC
          @Format date-time
        type: string
      fullname:
        description: |-
          User's full name
          @Description Official or preferred full name of the user
          @Example "John Doe"
        type: string
      id:
        description: |-
          Unique identifier for the user profile
          @Description Globally unique UUID for the user profile
          @Example "profile_123"
          @Format uuid
        type: string
      identity_image_url:
        description: |-
          URL to uploaded KTP image
          @Description Public URL of the user's official government-issued ID
          @Example "https://example.com/ktp.jpg"
          @Format uri
        type: string
      updated_at:
        description: |-
          Timestamp when the profile was last updated
          @Description Precise timestamp of the last modification to the profile details in UTC
          @Format date-time
        type: string
      user:
        allOf:
        - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.User'
        description: |-
          Associated user details
          @Description Comprehensive information about the user account
          @Description Provides additional context for the user profile
    type: object
  github_com_holycann_cultour-backend_internal_users_models.UserProfileUpdate:
    description: Structured payload for user profile update operations Supports partial
      updates with optional fields
    properties:
      bio:
        description: |-
          User's biographical information
          @Description Updated personal description or background
          @Description Optional field for refining profile information
          @Example "Senior software engineer with a passion for innovative solutions"
          @MaxLength 500
        maxLength: 500
        type: string
      fullname:
        description: |-
          User's full name
          @Description Updated full name for the user profile
          @Description Optional field for renaming the profile
          @Example "John A. Doe"
          @MinLength 2
          @MaxLength 100
        maxLength: 100
        minLength: 2
        type: string
      id:
        description: |-
          Unique identifier for the user profile
          @Description Globally unique UUID of the user profile to be updated
          @Description Must match an existing user profile in the system
          @Example "profile_123"
          @Format uuid
        type: string
      user_id:
        description: |-
          Associated user ID for the profile update
          @Description Unique identifier of the user associated with this profile
          @Description Optional during update, helps ensure correct profile ownership
          @Example "user_123"
          @Format uuid
        type: string
    required:
    - id
    type: object
  github_com_holycann_cultour-backend_internal_users_models.UserUpdate:
    description: Structured payload for user account update operations Supports partial
      updates with optional fields
    properties:
      email:
        description: |-
          User's email address
          @Description Updated email address for the user account
          @Description Optional field for changing contact information
          @Example "john.updated@example.com"
          @Format email
        type: string
      id:
        description: |-
          Unique identifier for the user
          @Description Globally unique UUID of the user account to be updated
          @Description Must match an existing user in the system
          @Example "user_123"
          @Format uuid
        type: string
      phone:
        description: |-
          User's phone number
          @Description Optional phone number for user contact
          @Example "+1234567890"
          @Format phone
        type: string
    required:
    - id
    type: object
  github_com_holycann_cultour-backend_pkg_response.APIResponse:
    properties:
      data:
        description: Actual response data
      error:
        allOf:
        - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.ErrorDetails'
        description: Detailed error information (only populated for error responses)
      message:
        description: Human-readable message
        type: string
      metadata:
        additionalProperties: true
        description: Additional metadata
        type: object
      pagination:
        allOf:
        - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.Pagination'
        description: Pagination information (optional)
      request_id:
        description: Unique request identifier for tracing
        type: string
      success:
        description: Status of the response (success/error)
        type: boolean
      timestamp:
        description: Timestamp of the response
        type: string
    type: object
  github_com_holycann_cultour-backend_pkg_response.ErrorDetails:
    properties:
      code:
        description: Machine-readable error code
        type: string
      details:
        description: Detailed error description
        type: string
      recoverable:
        description: Indicates if the error is potentially recoverable
        type: boolean
      trace:
        description: Trace information for debugging
        items:
          type: string
        type: array
    type: object
  github_com_holycann_cultour-backend_pkg_response.Pagination:
    properties:
      has_next_page:
        type: boolean
      page:
        type: integer
      per_page:
        type: integer
      total:
        type: integer
      total_pages:
        type: integer
    type: object
  internal_gemini.CreateChatSessionRequest:
    description: Detailed request structure for initiating an AI chat session with
      user authentication
    properties:
      event_id:
        description: |-
          Optional EventID to provide context for the chat session, enhancing personalization
          @Optional true
          @Example "event456"
        type: string
      user_id:
        description: |-
          UserID is the unique identifier of the user creating the session
          @Required true
          @Example "user123"
        type: string
    required:
    - user_id
    type: object
  internal_gemini.CreateChatSessionResponse:
    description: Response containing the unique session identifier for subsequent
      interactions
    properties:
      session_id:
        description: |-
          Unique identifier for the created chat session, used for message exchange
          @Example "session789"
        type: string
    type: object
  internal_gemini.EventDescriptionResponse:
    description: Response containing a rich, AI-generated description of a cultural
      event
    properties:
      description:
        description: |-
          Comprehensive description of the event, generated by AI analysis
          @Example "This vibrant cultural event showcases the traditional dance of the region..."
        type: string
    type: object
  internal_gemini.GenerateEventDescriptionRequest:
    properties:
      additional_context:
        type: string
      title:
        type: string
    required:
    - title
    type: object
  internal_gemini.SendMessageRequest:
    description: Request structure for sending a message to the AI with content validation
    properties:
      message:
        description: |-
          Message content to be sent to the AI, with length restriction
          @Required true
          @Max length 500
          @Example "Tell me about the cultural significance of this event"
        maxLength: 500
        type: string
    required:
    - message
    type: object
  internal_gemini.SendMessageResponse:
    description: Response from the AI containing multiple lines of contextual text
    properties:
      response:
        description: |-
          Multiple lines of the AI's response, providing a comprehensive answer
          @Example ["The event represents...", "Its cultural importance lies in..."]
        items:
          type: string
        type: array
    type: object
host: localhost:8181
info:
  contact:
    name: Cultour Development Team
  description: Backend API for Cultour Project
  title: Cultour API
  version: "1.0"
paths:
  /ai/chat/{sessionID}/message:
    post:
      consumes:
      - application/json
      description: Sends a user message to the AI, retrieves the AI's response, and
        maintains conversation context
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Unique Chat Session Identifier
        in: path
        name: sessionID
        required: true
        type: string
      - description: User Message Request with Content Validation
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_gemini.SendMessageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully processed message with multi-line AI response
          schema:
            $ref: '#/definitions/internal_gemini.SendMessageResponse'
        "400":
          description: Invalid request format or message exceeds length limit
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: AI assistant feature is currently restricted
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: Chat session not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal error processing message
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - BearerAuth: []
      summary: Send a message in an AI chat session
      tags:
      - AI
  /ai/chat/session:
    post:
      consumes:
      - application/json
      description: Creates a new AI chat session for a user, with optional event context
        for personalized interactions
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Chat Session Creation Request with User ID and Optional Event
          Context
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_gemini.CreateChatSessionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created chat session with unique session identifier
          schema:
            $ref: '#/definitions/internal_gemini.CreateChatSessionResponse'
        "400":
          description: Invalid request format or missing user ID
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: AI assistant feature is currently restricted
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: User not found in the system
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during session creation
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - BearerAuth: []
      summary: Create a new AI chat session
      tags:
      - AI
  /ai/events/description:
    post:
      consumes:
      - application/json
      description: Generates a rich, contextual description based on provided title
        and optional additional context.
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Event Title and Optional Details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_gemini.GenerateEventDescriptionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully generated comprehensive event description
          schema:
            $ref: '#/definitions/internal_gemini.EventDescriptionResponse'
        "400":
          description: Invalid or missing event title
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: Event exploration feature is currently restricted
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal error generating event description
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - BearerAuth: []
      summary: Generate an AI-powered event description for a new event
      tags:
      - AI
  /badges:
    get:
      description: |-
        Fetches a paginated list of badges with optional filtering and sorting
        Supports pagination, sorting, and name-based filtering
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - default: 10
        description: Maximum number of badges to return
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      - default: 0
        description: Number of badges to skip for pagination
        in: query
        minimum: 0
        name: offset
        type: integer
      - default: '"created_at'
        description: Field to sort badges by
        in: query
        name: sort_by
        type: string
      - default: '"desc'
        description: Sort direction
        in: query
        name: sort_order
        type: string
      - description: Filter badges by partial name match
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved badge list
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_achievement_models.BadgeDTO'
                  type: array
              type: object
        "204":
          description: No badges found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during badge retrieval
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Retrieve a list of badges
      tags:
      - Badges
    post:
      consumes:
      - application/json
      description: |-
        Allows administrators to create a new achievement badge with detailed metadata
        Requires admin authentication and authorization
      parameters:
      - description: Admin JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Badge Creation Details
        in: body
        name: badge
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_achievement_models.BadgeCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Badge successfully created with full details
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_achievement_models.BadgeDTO'
              type: object
        "400":
          description: Invalid badge creation payload or validation error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required - missing or invalid token
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: Forbidden - insufficient privileges (admin role required)
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during badge creation
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new badge in the system
      tags:
      - Badges
  /badges/{id}:
    delete:
      description: |-
        Permanently removes a badge from the system by its unique identifier
        Requires administrative privileges
      parameters:
      - description: Admin JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Unique Badge Identifier
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Badge successfully deleted
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "400":
          description: Invalid badge ID format
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: Forbidden - insufficient privileges
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: Badge not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during badge deletion
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a badge
      tags:
      - Badges
    get:
      description: Fetches detailed information about a badge by its unique identifier
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Unique Badge Identifier
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved badge details
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_achievement_models.BadgeDTO'
              type: object
        "400":
          description: Invalid badge ID format
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: Badge not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during badge retrieval
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Retrieve a specific badge
      tags:
      - Badges
    put:
      consumes:
      - application/json
      description: |-
        Allows administrators to modify badge details by its unique identifier
        Supports partial updates with optional fields
      parameters:
      - description: Admin JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Unique Badge Identifier
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Badge Update Payload
        in: body
        name: badge
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_achievement_models.BadgeUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: Badge successfully updated
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_achievement_models.BadgeDTO'
              type: object
        "400":
          description: Invalid badge update payload or ID
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: Forbidden - insufficient privileges
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: Badge not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during badge update
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Update an existing badge
      tags:
      - Badges
  /badges/count:
    get:
      description: Returns the total count of badges in the system, with optional
        name filtering
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Optional filter to count badges by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved badge count
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  type: integer
              type: object
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during badge count
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Count total number of badges
      tags:
      - Badges
  /badges/search:
    get:
      description: |-
        Performs a full-text search across badge name, description, and other relevant fields
        Supports advanced search with pagination and relevance ranking
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Search term for finding badges
        in: query
        minLength: 2
        name: query
        required: true
        type: string
      - default: 10
        description: Maximum number of search results
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      - default: 0
        description: Number of results to skip
        in: query
        minimum: 0
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully found matching badges
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_achievement_models.BadgeDTO'
                  type: array
              type: object
        "204":
          description: No badges match the search query
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "400":
          description: Invalid search parameters
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during badge search
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Search badges by query
      tags:
      - Badges
  /cities:
    get:
      description: |-
        Fetches a paginated list of cities with optional filtering and sorting
        Supports advanced querying with flexible pagination and filtering options
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - default: 1
        description: Page number for pagination
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: Number of cities per page
        in: query
        maximum: 100
        minimum: 1
        name: per_page
        type: integer
      - default: '"created_at'
        description: Field to sort cities by
        in: query
        name: sort_by
        type: string
      - default: '"desc'
        description: Sort direction
        in: query
        name: sort_order
        type: string
      - description: Filter cities by specific province
        in: query
        name: province_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved cities list
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.CityDTO'
                  type: array
              type: object
        "204":
          description: No cities found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during cities retrieval
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Retrieve cities list
      tags:
      - Cities
    post:
      consumes:
      - application/json
      description: |-
        Allows administrators to add a new city to the system
        Supports creating cities with detailed information and optional image
      parameters:
      - description: Admin JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: City Creation Details
        in: body
        name: city
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.CityCreate'
      produces:
      - application/json
      responses:
        "201":
          description: City successfully created with full details
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.CityDTO'
              type: object
        "400":
          description: Invalid city creation payload or validation error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required - missing or invalid token
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: Forbidden - insufficient privileges (admin role required)
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during city creation
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new city
      tags:
      - Cities
  /cities/{id}:
    delete:
      description: |-
        Allows administrators to permanently remove a city from the system
        Deletes the city and its associated resources
      parameters:
      - description: Admin JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Unique City Identifier
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: City successfully deleted
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "400":
          description: Invalid city ID format
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: Forbidden - insufficient privileges
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: City not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during city deletion
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a city
      tags:
      - Cities
    get:
      description: |-
        Fetches comprehensive details of a city by its unique identifier
        Returns full city information including province details
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Unique City Identifier
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved city details
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.CityDTO'
              type: object
        "400":
          description: Invalid city ID format
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: City not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during city retrieval
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Retrieve a specific city
      tags:
      - Cities
    put:
      consumes:
      - application/json
      description: |-
        Allows administrators to modify city details
        Supports partial updates with optional fields
      parameters:
      - description: Admin JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Unique City Identifier
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: City Update Payload
        in: body
        name: city
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.CityUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: City successfully updated
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.CityDTO'
              type: object
        "400":
          description: Invalid city update payload or ID
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: Forbidden - insufficient privileges
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: City not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during city update
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Update an existing city
      tags:
      - Cities
  /cities/search:
    get:
      description: |-
        Performs a full-text search across city details with advanced filtering
        Allows finding cities by keywords, province, and other attributes
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Search term for finding cities
        in: query
        minLength: 2
        name: query
        required: true
        type: string
      - default: 1
        description: Page number for pagination
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: Number of search results per page
        in: query
        maximum: 100
        minimum: 1
        name: per_page
        type: integer
      - default: '"relevance'
        description: Field to sort search results
        in: query
        name: sort_by
        type: string
      - default: '"desc'
        description: Sort direction
        in: query
        name: sort_order
        type: string
      - description: Filter cities by specific province
        in: query
        name: province_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully completed city search
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.CityDTO'
                  type: array
              type: object
        "204":
          description: No cities match the search query
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "400":
          description: Invalid search parameters
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during city search
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Search cities
      tags:
      - Cities
  /events:
    get:
      description: |-
        Fetches a paginated list of events with optional filtering and sorting
        Supports advanced querying with flexible pagination and filtering options
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - default: 1
        description: Page number for pagination
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: Number of events per page
        in: query
        maximum: 100
        minimum: 1
        name: per_page
        type: integer
      - default: '"created_at'
        description: Field to sort events by
        in: query
        name: sort_by
        type: string
      - default: '"desc'
        description: Sort direction
        in: query
        name: sort_order
        type: string
      - description: Filter events by kid-friendliness
        in: query
        name: is_kid_friendly
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved events list
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_cultural_models.EventDTO'
                  type: array
              type: object
        "204":
          description: No events found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during events retrieval
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Retrieve events list
      tags:
      - Events
    post:
      consumes:
      - multipart/form-data
      description: |-
        Allows authenticated users to add a new cultural event to the platform
        Supports multipart form data for event details and optional image upload
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Event Name
        in: formData
        maxLength: 100
        minLength: 2
        name: name
        required: true
        type: string
      - description: Event Description
        in: formData
        maxLength: 500
        name: description
        required: true
        type: string
      - description: Location object as JSON (name, latitude, longitude)
        in: formData
        name: location
        required: true
        type: string
      - description: Start Date (RFC3339 or YYYY-MM-DD format)
        in: formData
        name: start_date
        required: true
        type: string
      - description: End Date (RFC3339 or YYYY-MM-DD format)
        in: formData
        name: end_date
        required: true
        type: string
      - description: Indicates if the event is suitable for children
        in: formData
        name: is_kid_friendly
        type: boolean
      - description: Event Cover Image (max 2MB)
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Event successfully created with full details
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_cultural_models.EventDTO'
              type: object
        "400":
          description: Invalid event creation details or validation error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required - missing or invalid token
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during event creation
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new cultural event
      tags:
      - Events
  /events/{id}:
    delete:
      description: |-
        Allows event creator or administrator to remove an event from the platform
        Permanently deletes the event and associated resources
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Unique Event Identifier
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Event successfully deleted
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "400":
          description: Invalid event ID format
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: Forbidden - insufficient privileges
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: Event not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during event deletion
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete an existing event
      tags:
      - Events
    get:
      description: |-
        Fetches comprehensive details of an event by its unique identifier
        Returns full event information including location, creator, and related metadata
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Unique Event Identifier
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved event details
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_cultural_models.EventDTO'
              type: object
        "400":
          description: Invalid event ID format
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: Event not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during event retrieval
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Retrieve a specific event
      tags:
      - Events
    put:
      consumes:
      - multipart/form-data
      description: |-
        Allows event creator or administrator to modify event details
        Supports partial updates with multipart form data and optional image upload
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Unique Event Identifier
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Updated Event Name
        in: formData
        maxLength: 100
        minLength: 2
        name: name
        type: string
      - description: Updated Event Description
        in: formData
        maxLength: 500
        name: description
        type: string
      - description: Updated Location object as JSON
        in: formData
        name: location
        type: string
      - description: Updated Start Date (RFC3339 or YYYY-MM-DD format)
        in: formData
        name: start_date
        type: string
      - description: Updated End Date (RFC3339 or YYYY-MM-DD format)
        in: formData
        name: end_date
        type: string
      - description: Updated kid-friendly status
        in: formData
        name: is_kid_friendly
        type: boolean
      - description: New Event Cover Image
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Event successfully updated
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_cultural_models.EventDTO'
              type: object
        "400":
          description: Invalid event update details or validation error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: Forbidden - insufficient privileges
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: Event not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during event update
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Update an existing event
      tags:
      - Events
  /events/{id}/related:
    get:
      description: |-
        Finds events similar to a specific event based on location and other criteria
        Helps users discover nearby or thematically connected events
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Reference Event Identifier
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Optional location filter for related events
        in: query
        name: location_id
        type: string
      - default: 5
        description: Maximum number of related events to retrieve
        in: query
        maximum: 20
        minimum: 1
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved related events
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_cultural_models.EventDTO'
                  type: array
              type: object
        "204":
          description: No related events found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "400":
          description: Invalid event ID or location ID
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during related events retrieval
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Retrieve related events
      tags:
      - Events
  /events/{id}/views:
    post:
      description: |-
        Tracks and updates the number of times an event has been viewed by users
        Helps in calculating event popularity and trending status
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Unique Event Identifier
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Event views successfully updated
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "400":
          description: Invalid event ID
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during view count update
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Increment event view count
      tags:
      - Events
  /events/search:
    get:
      description: |-
        Performs a full-text search across event details with advanced filtering
        Allows finding events by keywords, location, and other attributes
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Search term for finding events
        in: query
        minLength: 2
        name: query
        required: true
        type: string
      - default: 1
        description: Page number for pagination
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: Number of search results per page
        in: query
        maximum: 100
        minimum: 1
        name: per_page
        type: integer
      - default: '"relevance'
        description: Field to sort search results
        in: query
        name: sort_by
        type: string
      - default: '"desc'
        description: Sort direction
        in: query
        name: sort_order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully completed event search
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_cultural_models.EventDTO'
                  type: array
              type: object
        "204":
          description: No events match the search query
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "400":
          description: Invalid search parameters
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during event search
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Search events
      tags:
      - Events
  /events/trending:
    get:
      description: |-
        Fetches a list of most popular or recently viewed events
        Ranks events based on view count and recency
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - default: 10
        description: Maximum number of trending events to retrieve
        in: query
        maximum: 50
        minimum: 1
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved trending events
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_cultural_models.EventDTO'
                  type: array
              type: object
        "204":
          description: No trending events found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "400":
          description: Invalid limit parameter
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during trending events retrieval
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Retrieve trending events
      tags:
      - Events
  /locations:
    get:
      description: |-
        Fetches a paginated list of locations with optional filtering and sorting
        Supports advanced querying with flexible pagination and filtering options
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - default: 1
        description: Page number for pagination
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: Number of locations per page
        in: query
        maximum: 100
        minimum: 1
        name: per_page
        type: integer
      - default: '"created_at'
        description: Field to sort locations by
        in: query
        name: sort_by
        type: string
      - default: '"desc'
        description: Sort direction
        in: query
        name: sort_order
        type: string
      - description: Filter locations by specific city
        in: query
        name: city_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved locations list
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.LocationDTO'
                  type: array
              type: object
        "204":
          description: No locations found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during locations retrieval
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Retrieve locations list
      tags:
      - Locations
    post:
      consumes:
      - application/json
      description: |-
        Allows administrators to add a new geographical location to the system
        Supports creating locations with detailed geospatial information
      parameters:
      - description: Admin JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Location Creation Details
        in: body
        name: location
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.LocationCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Location successfully created with full details
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.LocationDTO'
              type: object
        "400":
          description: Invalid location creation payload or validation error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required - missing or invalid token
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: Forbidden - insufficient privileges (admin role required)
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during location creation
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new location
      tags:
      - Locations
  /locations/{id}:
    delete:
      description: |-
        Allows administrators to permanently remove a location from the system
        Deletes the location and its associated resources
      parameters:
      - description: Admin JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Unique Location Identifier
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Location successfully deleted
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "400":
          description: Invalid location ID format
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: Forbidden - insufficient privileges
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: Location not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during location deletion
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a location
      tags:
      - Locations
    get:
      description: |-
        Fetches comprehensive details of a location by its unique identifier
        Returns full location information including city details and geospatial data
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Unique Location Identifier
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved location details
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.LocationDTO'
              type: object
        "400":
          description: Invalid location ID format
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: Location not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during location retrieval
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Retrieve a specific location
      tags:
      - Locations
    put:
      consumes:
      - application/json
      description: |-
        Allows administrators to modify location details
        Supports partial updates with optional fields
      parameters:
      - description: Admin JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Unique Location Identifier
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Location Update Payload
        in: body
        name: location
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.LocationUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: Location successfully updated
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.LocationDTO'
              type: object
        "400":
          description: Invalid location update payload or ID
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: Forbidden - insufficient privileges
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: Location not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during location update
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Update an existing location
      tags:
      - Locations
  /locations/search:
    get:
      description: |-
        Performs a full-text search across location details with advanced filtering
        Allows finding locations by keywords, city, coordinates, and other attributes
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Search term for finding locations
        in: query
        minLength: 2
        name: query
        required: true
        type: string
      - default: 1
        description: Page number for pagination
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: Number of search results per page
        in: query
        maximum: 100
        minimum: 1
        name: per_page
        type: integer
      - default: '"relevance'
        description: Field to sort search results
        in: query
        name: sort_by
        type: string
      - default: '"desc'
        description: Sort direction
        in: query
        name: sort_order
        type: string
      - description: Filter locations by specific city
        in: query
        name: city_id
        type: string
      - description: Latitude for proximity search
        format: float64
        in: query
        name: latitude
        type: number
      - description: Longitude for proximity search
        format: float64
        in: query
        name: longitude
        type: number
      - description: Search radius in kilometers for proximity search
        format: float64
        in: query
        minimum: 0
        name: radius
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: Successfully completed location search
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.LocationDTO'
                  type: array
              type: object
        "204":
          description: No locations match the search query
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "400":
          description: Invalid search parameters
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during location search
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Search locations
      tags:
      - Locations
  /messages:
    get:
      description: |-
        Fetches a paginated list of messages with optional filtering and sorting
        Supports advanced querying with flexible pagination and filtering options
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - default: 1
        description: Page number for pagination
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: Number of messages per page
        in: query
        maximum: 100
        minimum: 1
        name: per_page
        type: integer
      - default: '"created_at'
        description: Field to sort messages by
        in: query
        name: sort_by
        type: string
      - default: '"desc'
        description: Sort direction
        in: query
        name: sort_order
        type: string
      - description: Filter messages by specific thread
        in: query
        name: thread_id
        type: string
      - description: Filter messages by specific sender
        in: query
        name: sender_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved messages list
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.MessageDTO'
                  type: array
              type: object
        "204":
          description: No messages found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during messages retrieval
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Retrieve messages list
      tags:
      - Messages
    post:
      consumes:
      - application/json
      description: |-
        Allows authenticated users to send a message in a specific discussion thread
        Supports creating different types of messages (discussion, AI-generated)
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Message Creation Details
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.CreateMessage'
      produces:
      - application/json
      responses:
        "201":
          description: Message successfully created
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.MessageDTO'
              type: object
        "400":
          description: Invalid message creation payload or validation error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required - missing or invalid token
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: Forbidden - insufficient thread access privileges
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during message creation
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new message
      tags:
      - Messages
  /messages/{id}:
    delete:
      description: |-
        Allows message sender or thread administrator to remove a specific message
        Permanently deletes the message from the discussion thread
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Unique Message Identifier
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Message successfully deleted
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "400":
          description: Invalid message ID format
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: Forbidden - insufficient deletion privileges
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: Message not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during message deletion
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a message
      tags:
      - Messages
    put:
      consumes:
      - application/json
      description: |-
        Allows message sender to modify their own message content
        Supports partial updates with message type preservation
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Unique Message Identifier
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Message Update Payload
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.CreateMessage'
      produces:
      - application/json
      responses:
        "200":
          description: Message successfully updated
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.MessageDTO'
              type: object
        "400":
          description: Invalid message update payload or ID
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: Forbidden - can only update own messages
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: Message not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during message update
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Update an existing message
      tags:
      - Messages
  /messages/search:
    get:
      description: |-
        Performs a full-text search across message content with advanced filtering
        Allows finding messages by keywords and other attributes
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Search term for finding messages
        in: query
        minLength: 2
        name: query
        required: true
        type: string
      - default: 1
        description: Page number for pagination
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: Number of search results per page
        in: query
        maximum: 100
        minimum: 1
        name: per_page
        type: integer
      - default: '"relevance'
        description: Field to sort search results
        in: query
        name: sort_by
        type: string
      - default: '"desc'
        description: Sort direction
        in: query
        name: sort_order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully completed message search
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.MessageDTO'
                  type: array
              type: object
        "204":
          description: No messages match the search query
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "400":
          description: Invalid search parameters
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during message search
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Search messages
      tags:
      - Messages
  /messages/thread/{thread_id}:
    get:
      description: |-
        Fetches all messages associated with a particular discussion thread
        Returns messages in chronological order, supporting thread context
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Unique Thread Identifier
        format: uuid
        in: path
        name: thread_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved thread messages
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.MessageDTO'
                  type: array
              type: object
        "204":
          description: No messages found in the thread
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "400":
          description: Invalid thread ID format
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: Forbidden - insufficient thread access privileges
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: Thread not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during message retrieval
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Retrieve messages for a specific thread
      tags:
      - Messages
  /provinces:
    get:
      description: |-
        Fetches a paginated list of provinces with optional filtering and sorting
        Supports advanced querying with flexible pagination and filtering options
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - default: 1
        description: Page number for pagination
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: Number of provinces per page
        in: query
        maximum: 100
        minimum: 1
        name: per_page
        type: integer
      - default: '"created_at'
        description: Field to sort provinces by
        in: query
        name: sort_by
        type: string
      - default: '"desc'
        description: Sort direction
        in: query
        name: sort_order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved provinces list
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.ProvinceDTO'
                  type: array
              type: object
        "204":
          description: No provinces found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during provinces retrieval
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Retrieve provinces list
      tags:
      - Provinces
    post:
      consumes:
      - application/json
      description: |-
        Allows administrators to add a new administrative province to the system
        Supports creating provinces with detailed geographical information
      parameters:
      - description: Admin JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Province Creation Details
        in: body
        name: province
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.ProvinceCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Province successfully created with full details
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.ProvinceDTO'
              type: object
        "400":
          description: Invalid province creation payload or validation error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required - missing or invalid token
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: Forbidden - insufficient privileges (admin role required)
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during province creation
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new province
      tags:
      - Provinces
  /provinces/{id}:
    delete:
      description: |-
        Allows administrators to permanently remove a province from the system
        Deletes the province and its associated resources
      parameters:
      - description: Admin JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Unique Province Identifier
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Province successfully deleted
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "400":
          description: Invalid province ID format
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: Forbidden - insufficient privileges
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: Province not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during province deletion
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a province
      tags:
      - Provinces
    get:
      description: |-
        Fetches comprehensive details of a province by its unique identifier
        Returns full province information including associated cities
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Unique Province Identifier
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved province details
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.ProvinceDTO'
              type: object
        "400":
          description: Invalid province ID format
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: Province not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during province retrieval
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Retrieve a specific province
      tags:
      - Provinces
    put:
      consumes:
      - application/json
      description: |-
        Allows administrators to modify province details
        Supports partial updates with optional fields
      parameters:
      - description: Admin JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Unique Province Identifier
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Province Update Payload
        in: body
        name: province
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.ProvinceUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: Province successfully updated
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.ProvinceDTO'
              type: object
        "400":
          description: Invalid province update payload or ID
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: Forbidden - insufficient privileges
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: Province not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during province update
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Update an existing province
      tags:
      - Provinces
  /provinces/search:
    get:
      description: |-
        Performs a full-text search across province details with advanced filtering
        Allows finding provinces by keywords and other attributes
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Search term for finding provinces
        in: query
        minLength: 2
        name: query
        required: true
        type: string
      - default: 1
        description: Page number for pagination
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: Number of search results per page
        in: query
        maximum: 100
        minimum: 1
        name: per_page
        type: integer
      - default: '"relevance'
        description: Field to sort search results
        in: query
        name: sort_by
        type: string
      - default: '"desc'
        description: Sort direction
        in: query
        name: sort_order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully completed province search
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.ProvinceDTO'
                  type: array
              type: object
        "204":
          description: No provinces match the search query
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "400":
          description: Invalid search parameters
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during province search
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Search provinces
      tags:
      - Provinces
  /threads:
    get:
      description: |-
        Fetches a paginated list of discussion threads with optional filtering and sorting
        Supports advanced querying with flexible pagination and filtering options
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - default: 1
        description: Page number for pagination
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: Number of threads per page
        in: query
        maximum: 100
        minimum: 1
        name: per_page
        type: integer
      - default: '"created_at'
        description: Field to sort threads by
        in: query
        name: sort_by
        type: string
      - default: '"desc'
        description: Sort direction
        in: query
        name: sort_order
        type: string
      - description: Filter threads by status
        in: query
        name: status
        type: string
      - description: Filter threads by specific event
        in: query
        name: event_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved threads list
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.ThreadDTO'
                  type: array
              type: object
        "204":
          description: No threads found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during threads retrieval
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Retrieve discussion threads list
      tags:
      - Discussion Threads
    post:
      consumes:
      - application/json
      description: |-
        Allows authenticated users to start a new discussion thread for a specific event
        Supports creating threads with optional initial status
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Thread Creation Details
        in: body
        name: thread
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.CreateThread'
      produces:
      - application/json
      responses:
        "201":
          description: Thread successfully created with full details
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.ThreadDTO'
              type: object
        "400":
          description: Invalid thread creation payload or validation error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required - missing or invalid token
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: Forbidden - insufficient event access privileges
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during thread creation
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new discussion thread
      tags:
      - Discussion Threads
  /threads/{id}:
    delete:
      description: |-
        Allows thread creator or event administrator to remove a specific thread
        Permanently deletes the thread and associated messages
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Unique Thread Identifier
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Thread successfully deleted
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "400":
          description: Invalid thread ID format
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: Forbidden - insufficient thread deletion privileges
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: Thread not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during thread deletion
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a discussion thread
      tags:
      - Discussion Threads
    get:
      description: |-
        Fetches comprehensive details of a thread by its unique identifier
        Returns full thread information including creator, participants, and messages
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Unique Thread Identifier
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved thread details
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.ThreadDTO'
              type: object
        "400":
          description: Invalid thread ID format
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: Thread not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during thread retrieval
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Retrieve a specific discussion thread
      tags:
      - Discussion Threads
    put:
      consumes:
      - application/json
      description: |-
        Allows thread creator or event administrator to modify thread details
        Supports partial updates with thread status changes
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Unique Thread Identifier
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Thread Update Payload
        in: body
        name: thread
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.CreateThread'
      produces:
      - application/json
      responses:
        "200":
          description: Thread successfully updated
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.ThreadDTO'
              type: object
        "400":
          description: Invalid thread update payload or ID
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: Forbidden - insufficient thread modification privileges
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: Thread not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during thread update
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Update an existing discussion thread
      tags:
      - Discussion Threads
  /threads/{id}/join:
    post:
      description: |-
        Allows authenticated users to join an existing discussion thread
        Adds the current user as a participant in the thread
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Unique Thread Identifier
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully joined thread
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.ThreadDTO'
              type: object
        "400":
          description: Invalid thread ID format
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: Forbidden - thread joining not allowed
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: Thread not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "409":
          description: User already a participant in the thread
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during thread joining
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Join a discussion thread
      tags:
      - Discussion Threads
  /threads/event/{event_id}:
    get:
      description: |-
        Fetches the discussion thread associated with a particular event
        Returns the primary or most recent thread for the given event
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Unique Event Identifier
        format: uuid
        in: path
        name: event_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved event thread
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.ThreadDTO'
              type: object
        "400":
          description: Invalid event ID format
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: No thread found for the specified event
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during event thread retrieval
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Retrieve thread for a specific event
      tags:
      - Discussion Threads
  /threads/search:
    get:
      description: |-
        Performs a full-text search across thread details with advanced filtering
        Allows finding threads by keywords, event, and other attributes
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Search term for finding threads
        in: query
        minLength: 2
        name: query
        required: true
        type: string
      - default: 1
        description: Page number for pagination
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: Number of search results per page
        in: query
        maximum: 100
        minimum: 1
        name: per_page
        type: integer
      - default: '"relevance'
        description: Field to sort search results
        in: query
        name: sort_by
        type: string
      - default: '"desc'
        description: Sort direction
        in: query
        name: sort_order
        type: string
      - description: Filter threads by status
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully completed thread search
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.ThreadDTO'
                  type: array
              type: object
        "204":
          description: No threads match the search query
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "400":
          description: Invalid search parameters
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during thread search
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Search discussion threads
      tags:
      - Discussion Threads
  /users:
    get:
      description: |-
        Fetches a paginated list of user accounts with optional filtering and sorting
        Supports advanced querying with flexible pagination and filtering options
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - default: 1
        description: Page number for pagination
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: Number of users per page
        in: query
        maximum: 100
        minimum: 1
        name: per_page
        type: integer
      - default: '"created_at'
        description: Field to sort users by
        in: query
        name: sort_by
        type: string
      - default: '"desc'
        description: Sort direction
        in: query
        name: sort_order
        type: string
      - description: Filter users by system role
        in: query
        name: role
        type: string
      - description: Filter users by account status
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved users list
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserDTO'
                  type: array
              type: object
        "204":
          description: No users found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: Forbidden - insufficient privileges
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during users retrieval
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Retrieve users list
      tags:
      - User Management
    post:
      consumes:
      - application/json
      description: |-
        Allows user registration with email or third-party authentication
        Supports creating user accounts with various authentication providers
      parameters:
      - description: User Account Creation Details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserCreate'
      produces:
      - application/json
      responses:
        "201":
          description: User account successfully created
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserDTO'
              type: object
        "400":
          description: Invalid user creation payload or validation error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "409":
          description: User already exists with the provided email
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during user account creation
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      summary: Create a new user account
      tags:
      - User Management
    put:
      consumes:
      - application/json
      description: |-
        Allows administrators to modify user account details
        Supports partial updates with optional fields
      parameters:
      - description: Admin JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: User Account Update Payload
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: User account successfully updated
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserDTO'
              type: object
        "400":
          description: Invalid user update payload or ID
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: Forbidden - insufficient privileges
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: User account not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during user account update
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Update an existing user account
      tags:
      - User Management
  /users/{id}:
    delete:
      description: |-
        Allows administrators to permanently remove a user account
        Deletes the user account and associated resources
      parameters:
      - description: Admin JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Unique User Identifier
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User account successfully deleted
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "400":
          description: Invalid user ID format
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: Forbidden - insufficient privileges
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: User account not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during user account deletion
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a user account
      tags:
      - User Management
    get:
      description: |-
        Fetches comprehensive details of a user account by its unique identifier
        Returns full user information including profile and role details
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Unique User Identifier
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user account details
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserDTO'
              type: object
        "400":
          description: Invalid user ID format
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: Forbidden - insufficient privileges
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: User account not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during user account retrieval
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Retrieve a specific user account
      tags:
      - User Management
  /users/{user_id}/badges:
    get:
      description: |-
        Fetches comprehensive badge details for a specific user
        Returns full badge information including badge metadata
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Unique User Identifier
        format: uuid
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user badge details
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserBadgeDTO'
                  type: array
              type: object
        "204":
          description: No badges found for the user
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "400":
          description: Invalid user ID
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during badge retrieval
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Retrieve detailed user badge information
      tags:
      - User Badges
  /users/badges:
    delete:
      description: |-
        Allows administrators to revoke a specific badge from a user
        Permanently deletes the user badge association
      parameters:
      - description: Admin JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Unique User Identifier
        format: uuid
        in: query
        name: user_id
        required: true
        type: string
      - description: Unique Badge Identifier
        format: uuid
        in: query
        name: badge_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Badge successfully removed from user
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "400":
          description: Invalid user or badge ID
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: Forbidden - insufficient privileges
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: User badge association not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during badge removal
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Remove a badge from a user
      tags:
      - User Badges
    get:
      description: |-
        Fetches a list of badges earned by a specific user
        Returns comprehensive badge details with optional filtering
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Unique User Identifier
        format: uuid
        in: query
        name: user_id
        required: true
        type: string
      - default: 1
        description: Page number for pagination
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: Number of badges per page
        in: query
        maximum: 100
        minimum: 1
        name: per_page
        type: integer
      - default: '"created_at'
        description: Field to sort badges by
        in: query
        name: sort_by
        type: string
      - default: '"desc'
        description: Sort direction
        in: query
        name: sort_order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user badges
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserBadgeDTO'
                  type: array
              type: object
        "204":
          description: No badges found for the user
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "400":
          description: Invalid user ID or query parameters
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during badge retrieval
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Retrieve user's badges
      tags:
      - User Badges
    post:
      consumes:
      - application/json
      description: |-
        Allows administrators to award a specific badge to a user
        Creates a new user badge association in the system
      parameters:
      - description: Admin JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Badge Assignment Details
        in: body
        name: badge
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserBadgePayload'
      produces:
      - application/json
      responses:
        "201":
          description: Badge successfully assigned to user
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserBadgeDTO'
              type: object
        "400":
          description: Invalid badge assignment payload or validation error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required - missing or invalid token
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: Forbidden - insufficient privileges (admin role required)
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: User or badge not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "409":
          description: Badge already assigned to user
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during badge assignment
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Assign a badge to a user
      tags:
      - User Badges
  /users/badges/count:
    get:
      description: |-
        Retrieves the total number of badges earned by a specific user
        Supports optional filtering by badge type or name
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Unique User Identifier
        format: uuid
        in: query
        name: user_id
        required: true
        type: string
      - description: Optional filter to count badges by name
        in: query
        name: badge_name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved badge count
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  type: integer
              type: object
        "400":
          description: Invalid user ID
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during badge count
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Count user's badges
      tags:
      - User Badges
  /users/profiles:
    get:
      description: |-
        Fetches a paginated list of user profiles with optional filtering and sorting
        Supports advanced querying with flexible pagination and filtering options
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - default: 1
        description: Page number for pagination
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: Number of profiles per page
        in: query
        maximum: 100
        minimum: 1
        name: per_page
        type: integer
      - default: '"created_at'
        description: Field to sort profiles by
        in: query
        name: sort_by
        type: string
      - default: '"desc'
        description: Sort direction
        in: query
        name: sort_order
        type: string
      - description: Filter profiles by partial full name match
        in: query
        name: fullname
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user profiles list
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserProfileDTO'
                  type: array
              type: object
        "204":
          description: No user profiles found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during profiles retrieval
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Retrieve users profiles list
      tags:
      - User Profiles
    post:
      consumes:
      - application/json
      description: |-
        Allows administrators or users to create a detailed user profile
        Supports initializing profile with optional personal information
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: User Profile Creation Details
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserProfileCreate'
      produces:
      - application/json
      responses:
        "201":
          description: User profile successfully created
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserProfileDTO'
              type: object
        "400":
          description: Invalid profile creation payload or validation error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: Forbidden - insufficient privileges
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "409":
          description: Profile already exists for the user
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during profile creation
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new user profile
      tags:
      - User Profiles
    put:
      consumes:
      - application/json
      description: |-
        Allows users to modify their profile details
        Supports partial updates with optional fields
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: User Profile Update Payload
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserProfileUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: User profile successfully updated
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserProfileDTO'
              type: object
        "400":
          description: Invalid profile update payload or ID
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: Forbidden - can only update own profile
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: User profile not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during profile update
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Update an existing user profile
      tags:
      - User Profiles
  /users/profiles/{id}:
    delete:
      description: |-
        Allows administrators to permanently remove a user profile
        Deletes the profile and associated user information
      parameters:
      - description: Admin JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Unique User Profile Identifier
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User profile successfully deleted
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "400":
          description: Invalid profile ID format
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: Forbidden - insufficient privileges
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: User profile not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during profile deletion
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a user profile
      tags:
      - User Profiles
    get:
      description: |-
        Fetches comprehensive details of a user profile by its unique identifier
        Returns full profile information including user details
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Unique User Profile Identifier
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user profile details
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserProfileDTO'
              type: object
        "400":
          description: Invalid profile ID format
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: User profile not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during profile retrieval
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Retrieve a specific user profile
      tags:
      - User Profiles
  /users/profiles/{id}/verify:
    post:
      consumes:
      - multipart/form-data
      description: Allows users to upload their government-issued ID (KTP) for identity
        verification
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Unique User Profile Identifier
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: KTP/Identity Document Image
        format: binary
        in: formData
        name: identity_image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Identity document uploaded successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserProfileDTO'
              type: object
        "400":
          description: Invalid profile ID or file upload error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: Forbidden - user can only verify their own profile
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during identity verification
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Verify user's identity by uploading KTP image
      tags:
      - User Profiles
  /users/profiles/avatar:
    put:
      consumes:
      - multipart/form-data
      description: |-
        Allows users to upload a new profile picture
        Supports multipart file upload or URL-based avatar update
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Unique User Profile Identifier
        format: uuid
        in: formData
        name: id
        required: true
        type: string
      - description: URL of the new avatar image
        in: formData
        name: avatar_url
        required: true
        type: string
      - description: New Avatar Image File
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Avatar successfully updated
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserProfileDTO'
              type: object
        "400":
          description: Invalid avatar update payload or file
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: Forbidden - can only update own avatar
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: User profile not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during avatar update
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Update user profile avatar
      tags:
      - User Profiles
  /users/profiles/me:
    get:
      description: |-
        Fetches the profile details of the authenticated user
        Returns comprehensive profile information for the logged-in user
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved authenticated user profile
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserProfileDTO'
              type: object
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "404":
          description: User profile not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during profile retrieval
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Retrieve the current user's profile
      tags:
      - User Profiles
  /users/profiles/search:
    get:
      description: |-
        Performs a full-text search across user profile details with advanced filtering
        Allows finding user profiles by keywords, name, and other attributes
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Search term for finding user profiles
        in: query
        minLength: 2
        name: query
        required: true
        type: string
      - default: 1
        description: Page number for pagination
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: Number of search results per page
        in: query
        maximum: 100
        minimum: 1
        name: per_page
        type: integer
      - default: '"relevance'
        description: Field to sort search results
        in: query
        name: sort_by
        type: string
      - default: '"desc'
        description: Sort direction
        in: query
        name: sort_order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully completed user profile search
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserProfileDTO'
                  type: array
              type: object
        "204":
          description: No user profiles match the search query
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "400":
          description: Invalid search parameters
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during user profile search
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Search user profiles
      tags:
      - User Profiles
  /users/search:
    get:
      description: |-
        Performs a full-text search across user details with advanced filtering
        Allows finding users by keywords, email, and other attributes
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        required: true
        type: string
      - description: Search term for finding users
        in: query
        minLength: 2
        name: query
        required: true
        type: string
      - default: 1
        description: Page number for pagination
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: Number of search results per page
        in: query
        maximum: 100
        minimum: 1
        name: per_page
        type: integer
      - default: '"relevance'
        description: Field to sort search results
        in: query
        name: sort_by
        type: string
      - default: '"desc'
        description: Sort direction
        in: query
        name: sort_order
        type: string
      - description: Filter users by system role
        in: query
        name: role
        type: string
      - description: Filter users by account status
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully completed user search
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserDTO'
                  type: array
              type: object
        "204":
          description: No users match the search query
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "400":
          description: Invalid search parameters
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "403":
          description: Forbidden - insufficient privileges
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
        "500":
          description: Internal server error during user search
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_pkg_response.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Search users
      tags:
      - User Management
schemes:
- http
securityDefinitions:
  ApiKeyAuth:
    description: 'Insert Your JWT Token. Do NOT include "Bearer " prefix. Example:
      eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
