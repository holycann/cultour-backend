definitions:
  configs.Config:
    properties:
      environment:
        type: string
      geminiAI:
        $ref: '#/definitions/configs.GeminiAIConfig'
      logging:
        $ref: '#/definitions/configs.LoggingConfig'
      server:
        $ref: '#/definitions/configs.ServerConfig'
      supabase:
        $ref: '#/definitions/configs.SupabaseConfig'
    type: object
  configs.GeminiAIConfig:
    properties:
      aimodel:
        type: string
      apiKey:
        type: string
      maxTokens:
        type: integer
      temperature:
        format: float32
        type: number
      topK:
        format: float32
        type: number
      topP:
        format: float32
        type: number
    type: object
  configs.LoggingConfig:
    properties:
      compress:
        type: boolean
      filePath:
        type: string
      level:
        type: string
      maxAge:
        type: integer
      maxBackups:
        type: integer
      maxSize:
        type: integer
    type: object
  configs.ServerConfig:
    properties:
      host:
        type: string
      port:
        type: integer
      productionDomain:
        type: string
      readTimeout:
        type: integer
      shutdownTimeout:
        type: integer
      writeTimeout:
        type: integer
    type: object
  configs.SupabaseConfig:
    properties:
      apiPublicKey:
        type: string
      apiSecretKey:
        type: string
      jwtApiKeySecret:
        type: string
      projectID:
        type: string
      storageBucketID:
        type: string
    type: object
  github_com_holycann_cultour-backend_internal_achievement_models.Badge:
    properties:
      created_at:
        type: string
      description:
        type: string
      icon_url:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  github_com_holycann_cultour-backend_internal_achievement_models.BadgeCreate:
    properties:
      description:
        type: string
      icon_url:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  github_com_holycann_cultour-backend_internal_cultural_models.Event:
    properties:
      city_id:
        description: Reference to city ID
        example: city_12345
        type: string
      description:
        description: Event description
        example: Monas
        type: string
      end_date:
        description: 'Event end date (format: YYYY-MM-DDTHH:MM:SS±HH:MM)'
        example: "2024-06-01T09:00:00+07:00"
        type: string
      id:
        description: Unique identifier for the event
        example: loc_12345
        type: string
      image_url:
        description: Event image URL
        example: https://example.com/image.jpg
        type: string
      is_kid_friendly:
        description: Whether the event is kid-friendly
        example: true
        type: boolean
      location_id:
        description: Reference to location ID
        example: location_67890
        type: string
      name:
        description: Event name
        example: Monas
        type: string
      province_id:
        description: Reference to province ID
        example: province_67890
        type: string
      start_date:
        description: 'Event start date (format: YYYY-MM-DDTHH:MM:SS±HH:MM)'
        example: "2024-06-01T08:00:00+07:00"
        type: string
      user_id:
        description: ID of the user who created the event
        example: user_67890
        type: string
      views:
        example: 10
        type: integer
    type: object
  github_com_holycann_cultour-backend_internal_cultural_models.LocalStory:
    properties:
      audio_url:
        type: string
      city_id:
        type: string
      created_at:
        type: string
      id:
        example: story_12345
        type: string
      image_url:
        type: string
      is_for_kids:
        example: true
        type: boolean
      language:
        example: EN
        type: string
      location_id:
        type: string
      origin_culture:
        example: Sunda
        type: string
      story_text:
        type: string
      summary:
        example: Story about the origin of Tangkuban Perahu
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        example: Legend of Sangkuriang
        type: string
      updated_at:
        type: string
    type: object
  github_com_holycann_cultour-backend_internal_cultural_models.ResponseEvent:
    properties:
      city_id:
        description: Reference to city ID
        example: city_12345
        type: string
      description:
        description: Event description
        example: Monas
        type: string
      end_date:
        description: 'Event end date (format: YYYY-MM-DDTHH:MM:SS±HH:MM)'
        example: "2024-06-01T09:00:00+07:00"
        type: string
      id:
        description: Unique identifier for the event
        example: loc_12345
        type: string
      image_url:
        description: Event image URL
        example: https://example.com/image.jpg
        type: string
      is_kid_friendly:
        description: Whether the event is kid-friendly
        example: true
        type: boolean
      location_id:
        description: Reference to location ID
        example: location_67890
        type: string
      name:
        description: Event name
        example: Monas
        type: string
      province_id:
        description: Reference to province ID
        example: province_67890
        type: string
      start_date:
        description: 'Event start date (format: YYYY-MM-DDTHH:MM:SS±HH:MM)'
        example: "2024-06-01T08:00:00+07:00"
        type: string
      user:
        $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.User'
      user_id:
        description: ID of the user who created the event
        example: user_67890
        type: string
      views:
        example: 10
        type: integer
    type: object
  github_com_holycann_cultour-backend_internal_discussion_models.Message:
    properties:
      content:
        description: Message content
        example: This is the message content
        type: string
      created_at:
        description: Message creation time
        type: string
      id:
        description: 'Unique ID for the message, example: "msg_12345"'
        example: msg_12345
        type: string
      thread_id:
        description: ID of the thread the message belongs to
        example: thread_12345
        type: string
      user_id:
        description: ID of the user who sent the message
        example: user_67890
        type: string
    type: object
  github_com_holycann_cultour-backend_internal_discussion_models.ResponseMessage:
    properties:
      content:
        description: Message content
        example: This is the message content
        type: string
      created_at:
        description: Message creation time
        type: string
      id:
        description: 'Unique ID for the message, example: "msg_12345"'
        example: msg_12345
        type: string
      thread_id:
        description: ID of the thread the message belongs to
        example: thread_12345
        type: string
      user:
        $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.User'
      user_id:
        description: ID of the user who sent the message
        example: user_67890
        type: string
    type: object
  github_com_holycann_cultour-backend_internal_discussion_models.Thread:
    properties:
      created_at:
        description: Thread creation time
        example: "2024-06-01T15:04:05Z"
        type: string
      event_id:
        description: |-
          Content string `json:"content" db:"content" example:"Let's discuss about Monas history!"` // Thread content
          UserID    string `json:"user_id" db:"user_id" example:"user_67890"`                         // ID of the user who created the thread
        example: event-xx
        type: string
      id:
        description: 'Unique ID for the thread, example: "thread_12345"'
        example: thread_12345
        type: string
      status:
        description: 'Thread status, example: "open"'
        example: open
        type: string
      title:
        description: 'Thread title, example: "Discussion about Monas History"'
        example: Discussion about Monas History
        type: string
    type: object
  github_com_holycann_cultour-backend_internal_place_models.City:
    properties:
      id:
        description: 'Unique ID for the city, example: "city_12345"'
        example: city_12345
        type: string
      name:
        description: 'City name, example: "Jakarta"'
        example: Jakarta
        type: string
      province:
        description: 'Name of the province where the city is located, example: "DKI
          Jakarta"'
        example: DKI Jakarta
        type: string
    type: object
  github_com_holycann_cultour-backend_internal_place_models.Location:
    properties:
      city_id:
        description: Reference to the city ID
        example: city_67890
        type: string
      id:
        description: Unique identifier for the location
        example: loc_12345
        type: string
      latitude:
        description: Latitude in decimal degrees
        example: -6.175392
        type: number
      longitude:
        description: Longitude in decimal degrees
        example: 106.827153
        type: number
      name:
        description: Name of the location
        example: Monas
        type: string
    type: object
  github_com_holycann_cultour-backend_internal_place_models.Province:
    properties:
      id:
        description: 'Unique ID for the province, example: "province_12345"'
        example: province_12345
        type: string
      name:
        description: 'Province name, example: "West Java"'
        example: West Java
        type: string
    type: object
  github_com_holycann_cultour-backend_internal_response.ErrorResponse:
    properties:
      details:
        description: Detailed error information
      error:
        description: The primary error message
        type: string
      success:
        description: Indicates whether the request was successful (always false for
          errors)
        type: boolean
    type: object
  github_com_holycann_cultour-backend_internal_response.Response:
    properties:
      data:
        description: The actual data payload (can be an object, array, or null)
      message:
        description: A human-readable message describing the result
        type: string
      metadata:
        additionalProperties: true
        description: Metadata or additional information about the response
        type: object
      success:
        description: Indicates whether the request was successful
        type: boolean
    type: object
  github_com_holycann_cultour-backend_internal_users_models.User:
    description: User account details with authentication and metadata
    properties:
      created_at:
        description: Timestamp when the user account was created
        type: string
      deleted_at:
        description: Timestamp of user account soft deletion
        type: string
      email:
        description: |-
          User's email address
          @example "user@example.com"
        example: admin@gmail.com
        type: string
      id:
        description: |-
          Unique identifier for the user
          @example "user_123"
        example: user_123
        type: string
      last_sign_in_at:
        description: Timestamp of the last user sign-in
        type: string
      phone:
        description: |-
          User's phone number
          @example "+1234567890"
        example: "+1234567890"
        type: string
      role:
        description: |-
          User's role in the system
          @example "user"
          @enums "user","admin","moderator"
        enum:
        - user
        - admin
        - moderator
        example: user
        type: string
      updated_at:
        description: Timestamp of the last user account update
        type: string
    required:
    - email
    type: object
  github_com_holycann_cultour-backend_internal_users_models.UserBadge:
    description: Badge information associated with a user
    properties:
      badge_description:
        description: |-
          Badge description
          @example "Explored multiple cultural events"
        type: string
      badge_icon_url:
        description: |-
          Badge icon URL
          @example "https://example.com/badges/explorer.png"
        format: uri
        type: string
      badge_id:
        description: |-
          Badge identifier
          @example "explorer"
        example: explorer
        type: string
      badge_name:
        description: |-
          Badge name
          @example "Penjelajah"
        example: Penjelajah
        type: string
      earned_at:
        description: Timestamp when the badge was earned
        type: string
      id:
        description: |-
          Unique identifier for the user badge
          @example "user_badge_123"
        example: user_badge_123
        type: string
      user_id:
        description: |-
          Associated user ID
          @example "user_123"
        example: user_123
        type: string
    required:
    - badge_id
    - badge_name
    - user_id
    type: object
  github_com_holycann_cultour-backend_internal_users_models.UserBadgeCreate:
    description: Payload for assigning a badge to a user
    properties:
      badge_id:
        description: |-
          Badge identifier
          @example "explorer"
        example: explorer
        type: string
      user_id:
        description: |-
          Associated user ID
          @example "user_123"
        example: user_123
        type: string
    required:
    - badge_id
    - user_id
    type: object
  github_com_holycann_cultour-backend_internal_users_models.UserCreate:
    description: Payload for user registration
    properties:
      email:
        description: |-
          User's email address
          @example "user@example.com"
        example: admin@gmail.com
        type: string
      password:
        description: |-
          User's password
          @example "securePassword123!"
        example: admin123
        minLength: 8
        type: string
      role:
        description: |-
          User's role in the system
          @example "user"
          @enums "user","admin","moderator"
        enum:
        - user
        - admin
        - moderator
        example: user
        type: string
    required:
    - email
    - password
    type: object
  github_com_holycann_cultour-backend_internal_users_models.UserProfile:
    description: Detailed user profile with additional personal information, including
      identity (KTP) data
    properties:
      avatar_url:
        description: |-
          URL to user's avatar image
          @example "https://example.com/avatar.jpg"
        format: uri
        type: string
      bio:
        description: |-
          User's biographical information
          @example "Software engineer passionate about building great products"
        type: string
      created_at:
        description: Timestamp when the profile was created
        type: string
      deleted_at:
        description: Timestamp of profile soft deletion
        type: string
      fullname:
        description: |-
          User's full name
          @example "John Doe"
        example: John Doe
        type: string
      id:
        description: |-
          Unique identifier for the user profile
          @example "profile_123"
        example: profile_123
        type: string
      identity_image_url:
        description: |-
          URL to uploaded KTP image
          @example "https://example.com/ktp.jpg"
        format: uri
        type: string
      updated_at:
        description: Timestamp of the last profile update
        type: string
      user_id:
        description: |-
          Associated user ID
          @example "user_123"
        example: user_123
        type: string
    required:
    - fullname
    - user_id
    type: object
  github_com_holycann_cultour-backend_internal_users_models.UserProfileCreate:
    description: Payload for creating a user profile, including identity (KTP) data
    properties:
      avatar_url:
        description: |-
          URL to user's avatar image
          @example "https://example.com/avatar.jpg"
        format: uri
        type: string
      bio:
        description: |-
          User's biographical information
          @example "Software engineer passionate about building great products"
        type: string
      fullname:
        description: |-
          User's full name
          @example "John Doe"
        example: John Doe
        type: string
      identity_image_url:
        description: |-
          URL to uploaded KTP image
          @example "https://example.com/ktp.jpg"
        format: uri
        type: string
      user_id:
        description: |-
          Associated user ID
          @example "user_123"
        example: user_123
        type: string
    required:
    - fullname
    - user_id
    type: object
  github_com_holycann_cultour-backend_internal_users_models.UserUpdate:
    description: Payload for updating user information
    properties:
      email:
        description: |-
          User's email address (optional)
          @example "newemail@example.com"
        example: newemail@example.com
        type: string
      role:
        description: |-
          User's role in the system (optional)
          @example "admin"
          @enums "user","admin","moderator"
        enum:
        - user
        - admin
        - moderator
        example: admin
        type: string
    type: object
  internal_gemini.AIRequest:
    properties:
      prompt:
        description: |-
          Prompt is the text input from the user for the AI
          Example: "Explain quantum computing in simple terms"
          Required: true
          Min length: 1
          Max length: 2000
        example: Explain quantum computing in simple terms
        maxLength: 2000
        minLength: 1
        type: string
    required:
    - prompt
    type: object
  internal_gemini.AIResponse:
    properties:
      metadata:
        description: Metadata about the generated AI content
        properties:
          length:
            description: Length of the generated text
            example: 250
            type: integer
          tokens_used:
            description: Tokens used in the generation process
            example: 60
            type: integer
        type: object
      response:
        description: Generated text from the AI
        example: Quantum computing is a type of computing that uses quantum-mechanical
          phenomena...
        type: string
    type: object
host: localhost:8181
info:
  contact:
    name: Cultour Development Team
  description: Backend API for Cultour Project
  title: Cultour API
  version: "1.0"
paths:
  /ask:
    post:
      consumes:
      - application/json
      description: Generate text using Gemini AI
      parameters:
      - description: AI Text Generation Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_gemini.AIRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successful AI text generation
          schema:
            $ref: '#/definitions/internal_gemini.AIResponse'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error during AI generation
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      summary: Generate AI text response
      tags:
      - AI
  /ask/event/{id}:
    post:
      consumes:
      - application/json
      description: Generate text using Gemini AI with event context and chat history
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: string
      - description: Thread ID for chat history
        in: query
        name: thread_id
        type: string
      - description: AI Text Generation Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_gemini.AIRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successful AI text generated
          schema:
            $ref: '#/definitions/internal_gemini.AIResponse'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "404":
          description: Event not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error during AI generation
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      summary: Generate AI text response for a specific event
      tags:
      - AI
  /badges:
    get:
      description: Retrieve a list of badges with pagination
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - default: 10
        description: Number of badges to retrieve
        in: query
        name: limit
        type: integer
      - default: 0
        description: Number of badges to skip
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Badges retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_achievement_models.Badge'
                  type: array
              type: object
        "500":
          description: Failed to list badges
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: List badges
      tags:
      - badges
    post:
      consumes:
      - application/json
      description: Add a new badge to the system
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: Badge Information
        in: body
        name: badge
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_achievement_models.BadgeCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Badge created successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_achievement_models.Badge'
              type: object
        "400":
          description: Invalid badge creation details
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new badge
      tags:
      - badges
  /badges/{id}:
    delete:
      description: Remove a badge from the system by its ID
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: Badge ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Badge deleted successfully
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
        "400":
          description: Badge ID is required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Failed to delete badge
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a badge
      tags:
      - badges
    get:
      description: Retrieve a badge by its unique identifier
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: Badge ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Badge retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_achievement_models.Badge'
              type: object
        "400":
          description: Badge ID is required
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "404":
          description: Badge not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get a specific badge
      tags:
      - badges
    put:
      consumes:
      - application/json
      description: Update an existing badge by its ID
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: Badge ID
        in: path
        name: id
        required: true
        type: string
      - description: Badge Update Information
        in: body
        name: badge
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_achievement_models.BadgeCreate'
      produces:
      - application/json
      responses:
        "200":
          description: Badge updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_achievement_models.Badge'
              type: object
        "400":
          description: Invalid badge update details or missing ID
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Failed to update badge
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update a badge
      tags:
      - badges
  /badges/count:
    get:
      description: Retrieve the total number of badges in the system
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Badge count retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  type: integer
              type: object
        "500":
          description: Failed to count badges
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Count badges
      tags:
      - badges
  /cities:
    get:
      description: Retrieve a list of cities with pagination
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - default: 10
        description: Number of cities to retrieve
        in: query
        name: limit
        type: integer
      - default: 0
        description: Number of cities to skip
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Cities retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.City'
                  type: array
              type: object
        "500":
          description: Failed to list cities
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: List cities
      tags:
      - Cities
    post:
      consumes:
      - application/json
      description: Add a new city to the system
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: City Information
        in: body
        name: city
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.City'
      produces:
      - application/json
      responses:
        "201":
          description: City created successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.City'
              type: object
        "400":
          description: Invalid city creation details
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new city
      tags:
      - Cities
  /cities/{id}:
    delete:
      description: Remove a city from the system by its unique identifier
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: City ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: City deleted successfully
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
        "400":
          description: Invalid city ID
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "404":
          description: City not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a city
      tags:
      - Cities
    get:
      description: Retrieve a city's details by its unique identifier
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: City ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: City retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.City'
              type: object
        "404":
          description: City not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get city by ID
      tags:
      - Cities
    put:
      consumes:
      - application/json
      description: Update an existing city's details
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: City ID
        in: path
        name: id
        required: true
        type: string
      - description: City Update Details
        in: body
        name: city
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.City'
      produces:
      - application/json
      responses:
        "200":
          description: City updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.City'
              type: object
        "400":
          description: Invalid city update details
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "404":
          description: City not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update a city
      tags:
      - Cities
  /cities/search:
    get:
      description: Search cities by various criteria
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: City ID
        in: query
        name: id
        type: string
      - description: City Name
        in: query
        name: name
        type: string
      - default: 10
        description: Number of results to retrieve
        in: query
        name: limit
        type: integer
      - default: 0
        description: Number of results to skip
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Cities found successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.City'
                  type: array
              type: object
        "400":
          description: Invalid search parameters
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Search cities
      tags:
      - Cities
  /events:
    get:
      description: Retrieve a list of cultural events with pagination
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - default: 10
        description: Number of events to retrieve
        in: query
        name: limit
        type: integer
      - default: 0
        description: Number of events to skip
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Events retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_cultural_models.ResponseEvent'
                  type: array
              type: object
        "500":
          description: Failed to list events
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: List events
      tags:
      - Events
    post:
      consumes:
      - application/json
      description: Add a new cultural event to the system
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: Event Information
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_cultural_models.Event'
      produces:
      - application/json
      responses:
        "201":
          description: Event created successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_cultural_models.ResponseEvent'
              type: object
        "400":
          description: Invalid event creation details
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new event
      tags:
      - Events
  /events/{id}:
    delete:
      description: Remove a cultural event from the system by its unique identifier
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: Event ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Event deleted successfully
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
        "400":
          description: Invalid event ID
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "404":
          description: Event not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete an event
      tags:
      - Events
    get:
      description: Retrieve a cultural event's details by its unique identifier
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: Event ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Event retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_cultural_models.ResponseEvent'
              type: object
        "404":
          description: Event not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get event by ID
      tags:
      - Events
    put:
      consumes:
      - application/json
      description: Update an existing cultural event's details
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: Event ID
        in: path
        name: id
        required: true
        type: string
      - description: Event Update Details
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_cultural_models.Event'
      produces:
      - application/json
      responses:
        "200":
          description: Event updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_cultural_models.ResponseEvent'
              type: object
        "400":
          description: Invalid event update details
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "404":
          description: Event not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update an event
      tags:
      - Events
  /events/search:
    get:
      description: Search cultural events by various criteria
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: Event ID
        in: query
        name: id
        type: string
      - description: Event Name
        in: query
        name: name
        type: string
      - description: Search query
        in: query
        name: query
        type: string
      - default: 10
        description: Number of results to retrieve
        in: query
        name: limit
        type: integer
      - default: 0
        description: Number of results to skip
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Events found successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_cultural_models.ResponseEvent'
                  type: array
              type: object
        "400":
          description: Invalid search parameters
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Search events
      tags:
      - Events
  /events/trending:
    get:
      description: Retrieve a list of trending events based on views
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - default: 10
        description: Number of trending events to retrieve
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Trending events retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_cultural_models.ResponseEvent'
                  type: array
              type: object
        "500":
          description: Failed to retrieve trending events
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get trending events
      tags:
      - Events
  /local-stories:
    get:
      description: Retrieve a list of local cultural stories with pagination
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - default: 10
        description: Number of local stories to retrieve
        in: query
        name: limit
        type: integer
      - default: 0
        description: Number of local stories to skip
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Local stories retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_cultural_models.LocalStory'
                  type: array
              type: object
        "500":
          description: Failed to list local stories
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: List local stories
      tags:
      - Local Stories
    post:
      consumes:
      - application/json
      description: Add a new local cultural story to the system
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: Local Story Information
        in: body
        name: local_story
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_cultural_models.LocalStory'
      produces:
      - application/json
      responses:
        "201":
          description: Local story created successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_cultural_models.LocalStory'
              type: object
        "400":
          description: Invalid local story creation details
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new local story
      tags:
      - Local Stories
  /local-stories/{id}:
    delete:
      description: Remove a local cultural story from the system by its unique identifier
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: Local Story ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Local story deleted successfully
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
        "400":
          description: Invalid local story ID
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "404":
          description: Local story not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a local story
      tags:
      - Local Stories
    put:
      consumes:
      - application/json
      description: Update an existing local cultural story's details
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: Local Story ID
        in: path
        name: id
        required: true
        type: string
      - description: Local Story Update Details
        in: body
        name: local_story
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_cultural_models.LocalStory'
      produces:
      - application/json
      responses:
        "200":
          description: Local story updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_cultural_models.LocalStory'
              type: object
        "400":
          description: Invalid local story update details
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "404":
          description: Local story not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update a local story
      tags:
      - Local Stories
  /local-stories/search:
    get:
      description: Search local cultural stories by various criteria
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: Local Story ID
        in: query
        name: id
        type: string
      - description: Local Story Title
        in: query
        name: title
        type: string
      - default: 10
        description: Number of results to retrieve
        in: query
        name: limit
        type: integer
      - default: 0
        description: Number of results to skip
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Local stories found successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_cultural_models.LocalStory'
                  type: array
              type: object
        "400":
          description: Invalid search parameters
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Search local stories
      tags:
      - Local Stories
  /locations:
    get:
      description: Retrieve a list of locations with pagination
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - default: 10
        description: Number of locations to retrieve
        in: query
        name: limit
        type: integer
      - default: 0
        description: Number of locations to skip
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Locations retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.Location'
                  type: array
              type: object
        "500":
          description: Failed to list locations
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: List locations
      tags:
      - Locations
    post:
      consumes:
      - application/json
      description: Add a new location to the system
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: Location Information
        in: body
        name: location
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.Location'
      produces:
      - application/json
      responses:
        "201":
          description: Location created successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.Location'
              type: object
        "400":
          description: Invalid location creation details
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new location
      tags:
      - Locations
  /locations/{id}:
    delete:
      description: Remove a location from the system by its unique identifier
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: Location ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Location deleted successfully
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
        "400":
          description: Invalid location ID
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "404":
          description: Location not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a location
      tags:
      - Locations
    put:
      consumes:
      - application/json
      description: Update an existing location's details
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: Location ID
        in: path
        name: id
        required: true
        type: string
      - description: Location Update Details
        in: body
        name: location
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.Location'
      produces:
      - application/json
      responses:
        "200":
          description: Location updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.Location'
              type: object
        "400":
          description: Invalid location update details
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "404":
          description: Location not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update a location
      tags:
      - Locations
  /locations/search:
    get:
      description: Search locations by various criteria
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: Location ID
        in: query
        name: id
        type: string
      - description: Location Name
        in: query
        name: name
        type: string
      - default: 10
        description: Number of results to retrieve
        in: query
        name: limit
        type: integer
      - default: 0
        description: Number of results to skip
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Locations found successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.Location'
                  type: array
              type: object
        "400":
          description: Invalid search parameters
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Search locations
      tags:
      - Locations
  /messages:
    get:
      description: Retrieve a list of messages with pagination
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - default: 10
        description: Number of messages to retrieve
        in: query
        name: limit
        type: integer
      - default: 0
        description: Number of messages to skip
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Messages retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.ResponseMessage'
                  type: array
              type: object
        "500":
          description: Failed to list messages
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: List messages
      tags:
      - Messages
    post:
      consumes:
      - application/json
      description: Add a new message to the system
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: Message Information
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.Message'
      produces:
      - application/json
      responses:
        "201":
          description: Message created successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.ResponseMessage'
              type: object
        "400":
          description: Invalid message creation details
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new message
      tags:
      - Messages
  /messages/{id}:
    delete:
      description: Remove a message from the system by its unique identifier
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: Message ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Message deleted successfully
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
        "400":
          description: Invalid message ID
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "404":
          description: Message not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a message
      tags:
      - Messages
    put:
      consumes:
      - application/json
      description: Update an existing message's details
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: Message ID
        in: path
        name: id
        required: true
        type: string
      - description: Message Update Details
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.Message'
      produces:
      - application/json
      responses:
        "200":
          description: Message updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.ResponseMessage'
              type: object
        "400":
          description: Invalid message update details
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "404":
          description: Message not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update a message
      tags:
      - Messages
  /messages/search:
    get:
      description: Search messages by various criteria
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: Message ID
        in: query
        name: id
        type: string
      - description: Thread ID
        in: query
        name: threadID
        type: string
      - default: 10
        description: Number of results to retrieve
        in: query
        name: limit
        type: integer
      - default: 0
        description: Number of results to skip
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Messages found successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.ResponseMessage'
                  type: array
              type: object
        "400":
          description: Invalid search parameters
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Search messages
      tags:
      - Messages
  /profile:
    get:
      description: Retrieve a list of user profiles with pagination
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - default: 10
        description: Number of user profiles to retrieve
        in: query
        name: limit
        type: integer
      - default: 0
        description: Number of user profiles to skip
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User profiles retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserProfile'
                  type: array
              type: object
        "500":
          description: Failed to list user profiles
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: List user profiles
      tags:
      - User Profiles
    post:
      consumes:
      - application/json
      description: Register a new user profile in the system
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: User Profile Creation Details
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserProfileCreate'
      produces:
      - application/json
      responses:
        "201":
          description: User profile created successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserProfile'
              type: object
        "400":
          description: Invalid user profile creation details
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new user profile
      tags:
      - User Profiles
  /profile/{id}:
    delete:
      description: Remove a user profile from the system by its unique identifier
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: User Profile ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User profile deleted successfully
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
        "400":
          description: Invalid user profile ID
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "404":
          description: User profile not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a user profile
      tags:
      - User Profiles
    put:
      consumes:
      - application/json
      description: Update an existing user profile's details
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: User Profile ID
        in: path
        name: id
        required: true
        type: string
      - description: User Profile Update Details
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserProfile'
      produces:
      - application/json
      responses:
        "200":
          description: User profile updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserProfile'
              type: object
        "400":
          description: Invalid user profile update details
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "404":
          description: User profile not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update a user profile
      tags:
      - User Profiles
  /profile/search:
    get:
      consumes:
      - application/json
      description: Retrieve user profiles by ID, User ID, or with pagination
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        type: string
      - description: User Profile ID
        in: path
        name: id
        type: string
      - description: User ID
        in: query
        name: user_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user profiles
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid input parameters
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "404":
          description: User profile not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Failed to retrieve user profiles
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Search user profiles
      tags:
      - User Profiles
  /provinces:
    get:
      description: Retrieve a list of provinces with pagination
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - default: 10
        description: Number of provinces to retrieve
        in: query
        name: limit
        type: integer
      - default: 0
        description: Number of provinces to skip
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Provinces retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.Province'
                  type: array
              type: object
        "500":
          description: Failed to list provinces
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: List provinces
      tags:
      - Provinces
    post:
      consumes:
      - application/json
      description: Add a new province to the system
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: Province Information
        in: body
        name: province
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.Province'
      produces:
      - application/json
      responses:
        "201":
          description: Province created successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.Province'
              type: object
        "400":
          description: Invalid province creation details
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new province
      tags:
      - Provinces
  /provinces/{id}:
    delete:
      description: Remove a province from the system by its unique identifier
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: Province ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Province deleted successfully
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
        "400":
          description: Invalid province ID
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "404":
          description: Province not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a province
      tags:
      - Provinces
    get:
      description: Retrieve a province's details by its unique identifier
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: Province ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Province retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.Province'
              type: object
        "404":
          description: Province not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get province by ID
      tags:
      - Provinces
    put:
      consumes:
      - application/json
      description: Update an existing province's details
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: Province ID
        in: path
        name: id
        required: true
        type: string
      - description: Province Update Details
        in: body
        name: province
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.Province'
      produces:
      - application/json
      responses:
        "200":
          description: Province updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.Province'
              type: object
        "400":
          description: Invalid province update details
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "404":
          description: Province not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update a province
      tags:
      - Provinces
  /provinces/search:
    get:
      description: Search provinces by various criteria
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: Province ID
        in: query
        name: id
        type: string
      - description: Province Name
        in: query
        name: name
        type: string
      - default: 10
        description: Number of results to retrieve
        in: query
        name: limit
        type: integer
      - default: 0
        description: Number of results to skip
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Provinces found successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_place_models.Province'
                  type: array
              type: object
        "400":
          description: Invalid search parameters
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Search provinces
      tags:
      - Provinces
  /threads:
    get:
      description: Retrieve a list of discussion threads with pagination
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - default: 10
        description: Number of threads to retrieve
        in: query
        name: limit
        type: integer
      - default: 0
        description: Number of threads to skip
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Threads retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.Thread'
                  type: array
              type: object
        "500":
          description: Failed to list threads
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: List threads
      tags:
      - Threads
    post:
      consumes:
      - application/json
      description: Add a new discussion thread to the system
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: Thread Information
        in: body
        name: thread
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.Thread'
      produces:
      - application/json
      responses:
        "201":
          description: Thread created successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.Thread'
              type: object
        "400":
          description: Invalid thread creation details
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new thread
      tags:
      - Threads
  /threads/{id}:
    delete:
      description: Remove a discussion thread from the system by its unique identifier
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: Thread ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Thread deleted successfully
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
        "400":
          description: Invalid thread ID
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "404":
          description: Thread not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a thread
      tags:
      - Threads
    get:
      description: Retrieve a discussion thread's details by its unique identifier
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: Thread ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Thread retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.Thread'
              type: object
        "404":
          description: Thread not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get thread by ID
      tags:
      - Threads
    put:
      consumes:
      - application/json
      description: Update an existing discussion thread's details
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: Thread ID
        in: path
        name: id
        required: true
        type: string
      - description: Thread Update Details
        in: body
        name: thread
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.Thread'
      produces:
      - application/json
      responses:
        "200":
          description: Thread updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.Thread'
              type: object
        "400":
          description: Invalid thread update details
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "404":
          description: Thread not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update a thread
      tags:
      - Threads
  /threads/search:
    get:
      description: Search discussion threads by various criteria
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: Thread ID
        in: query
        name: id
        type: string
      - description: Thread Title
        in: query
        name: title
        type: string
      - default: 10
        description: Number of results to retrieve
        in: query
        name: limit
        type: integer
      - default: 0
        description: Number of results to skip
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Threads found successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.Thread'
                  type: array
              type: object
        "400":
          description: Invalid search parameters
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Search threads
      tags:
      - Threads
  /users:
    get:
      description: Retrieve a list of users with pagination
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - default: 10
        description: Number of users to retrieve
        in: query
        name: limit
        type: integer
      - default: 0
        description: Number of users to skip
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Users retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.User'
                  type: array
              type: object
        "500":
          description: Failed to list users
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: List users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Register a new user in the system
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: User Registration Details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserCreate'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.User'
              type: object
        "400":
          description: Invalid user creation details
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new user
      tags:
      - Users
  /users/{id}:
    delete:
      description: Remove a user from the system by their unique identifier
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User deleted successfully
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
        "400":
          description: Invalid user ID
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a user
      tags:
      - Users
    get:
      description: Retrieve a user's details by their unique identifier
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.User'
              type: object
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get user by ID
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Update an existing user's details
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User Update Details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: User updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.User'
              type: object
        "400":
          description: Invalid user update details
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update a user
      tags:
      - Users
  /users/badges:
    delete:
      description: Delete a specific badge from a user's profile
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: User ID
        in: query
        name: user_id
        required: true
        type: string
      - description: Badge ID
        in: query
        name: badge_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Badge removed successfully
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
        "400":
          description: Invalid user ID or badge ID
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Remove a badge from a user
      tags:
      - User Badges
    get:
      description: Retrieve badges for a specific user
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: User ID
        in: query
        name: user_id
        required: true
        type: string
      - default: 10
        description: Number of badges to retrieve
        in: query
        name: limit
        type: integer
      - default: 0
        description: Number of badges to skip
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User badges retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserBadge'
                  type: array
              type: object
        "400":
          description: Invalid search parameters
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get user badges
      tags:
      - User Badges
    post:
      consumes:
      - application/json
      description: Add a new badge to a user's profile
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: Badge Assignment Details
        in: body
        name: badge
        required: true
        schema:
          $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserBadgeCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Badge assigned successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserBadge'
              type: object
        "400":
          description: Invalid badge assignment details
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Assign a badge to a user
      tags:
      - User Badges
  /users/badges/count:
    get:
      description: Retrieve the number of badges a user has
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: User ID
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User badge count retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  type: integer
              type: object
        "400":
          description: Invalid user ID
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Count user badges
      tags:
      - User Badges
  /users/search:
    get:
      description: Search users by various criteria
      parameters:
      - description: JWT Token (without 'Bearer ' prefix)
        in: header
        name: Authorization
        type: string
      - description: User ID
        in: query
        name: id
        type: string
      - description: User Email
        in: query
        name: email
        type: string
      - default: 10
        description: Number of results to retrieve
        in: query
        name: limit
        type: integer
      - default: 0
        description: Number of results to skip
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Users found successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_holycann_cultour-backend_internal_users_models.User'
                  type: array
              type: object
        "400":
          description: Invalid search parameters
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Search users
      tags:
      - Users
schemes:
- http
securityDefinitions:
  ApiKeyAuth:
    description: 'Insert Your JWT Token. Do NOT include "Bearer " prefix. Example:
      eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
