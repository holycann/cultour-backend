{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Backend API for Cultour Project",
        "title": "Cultour API",
        "contact": {
            "name": "Cultour Development Team"
        },
        "version": "1.0"
    },
    "host": "localhost:8181",
    "paths": {
        "/ai/chat/session": {
            "post": {
                "description": "Creates a new AI chat session for a user, optionally with an event context",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI"
                ],
                "summary": "Create a new chat session",
                "parameters": [
                    {
                        "description": "Chat Session Creation Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_gemini.CreateChatSessionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created chat session",
                        "schema": {
                            "$ref": "#/definitions/internal_gemini.CreateChatSessionResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request or user not found",
                        "schema": {
                            "$ref": "#/definitions/internal_gemini.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Feature not supported",
                        "schema": {
                            "$ref": "#/definitions/internal_gemini.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error during session creation",
                        "schema": {
                            "$ref": "#/definitions/internal_gemini.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ai/chat/{sessionID}/message": {
            "post": {
                "description": "Sends a user message to the AI and retrieves the AI's response",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI"
                ],
                "summary": "Send a message in an AI chat session",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chat Session ID",
                        "name": "sessionID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Message Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_gemini.SendMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully processed message",
                        "schema": {
                            "$ref": "#/definitions/internal_gemini.SendMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/internal_gemini.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Feature not supported",
                        "schema": {
                            "$ref": "#/definitions/internal_gemini.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error processing message",
                        "schema": {
                            "$ref": "#/definitions/internal_gemini.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ai/event/{eventID}/description": {
            "get": {
                "description": "Generates a comprehensive AI-powered description for a specific event",
                "tags": [
                    "AI"
                ],
                "summary": "Generate an AI event description",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "eventID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully generated event description",
                        "schema": {
                            "$ref": "#/definitions/internal_gemini.EventDescriptionResponse"
                        }
                    },
                    "403": {
                        "description": "Feature not supported",
                        "schema": {
                            "$ref": "#/definitions/internal_gemini.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Event not found",
                        "schema": {
                            "$ref": "#/definitions/internal_gemini.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error generating description",
                        "schema": {
                            "$ref": "#/definitions/internal_gemini.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/badges": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a list of badges with pagination and filtering",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "badges"
                ],
                "summary": "List badges",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of badges to retrieve",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of badges to skip",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"created_at\"",
                        "description": "Field to sort by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"desc\"",
                        "description": "Sort order (asc/desc)",
                        "name": "sort_order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Badges retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_achievement_models.Badge"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Failed to list badges",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new badge to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "badges"
                ],
                "summary": "Create a new badge",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "description": "Badge Information",
                        "name": "badge",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_achievement_models.BadgeCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Badge created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_achievement_models.Badge"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid badge creation details",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/badges/count": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve the total number of badges in the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "badges"
                ],
                "summary": "Count badges",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Badge count retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Failed to count badges",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/badges/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a badge by its unique identifier",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "badges"
                ],
                "summary": "Get a specific badge",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Badge ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Badge retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_achievement_models.Badge"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Badge ID is required",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "404": {
                        "description": "Badge not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an existing badge by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "badges"
                ],
                "summary": "Update a badge",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Badge ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Badge Update Information",
                        "name": "badge",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_achievement_models.BadgeCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Badge updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_achievement_models.Badge"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid badge update details or missing ID",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to update badge",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove a badge from the system by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "badges"
                ],
                "summary": "Delete a badge",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Badge ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Badge ID is required",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to delete badge",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/cities": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a list of cities with pagination and filtering",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cities"
                ],
                "summary": "List cities",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of cities to retrieve",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of cities to skip",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"created_at\"",
                        "description": "Field to sort by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"desc\"",
                        "description": "Sort order (asc/desc)",
                        "name": "sort_order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by province ID",
                        "name": "province_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cities retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_place_models.City"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Failed to list cities",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new city to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cities"
                ],
                "summary": "Create a new city",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "description": "City Information",
                        "name": "city",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_place_models.City"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "City created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_place_models.City"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid city creation details",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/cities/search": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Search cities by various criteria",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cities"
                ],
                "summary": "Search cities",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Search query (name, etc.)",
                        "name": "query",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of results to retrieve",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of results to skip",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"created_at\"",
                        "description": "Field to sort by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"desc\"",
                        "description": "Sort order (asc/desc)",
                        "name": "sort_order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cities found successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_place_models.City"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid search parameters",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/cities/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a city's details by its unique identifier",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cities"
                ],
                "summary": "Get city by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "City ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "City retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_place_models.City"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "City not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an existing city's details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cities"
                ],
                "summary": "Update a city",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "City ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "City Update Details",
                        "name": "city",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_place_models.City"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "City updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_place_models.City"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid city update details",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "404": {
                        "description": "City not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove a city from the system by its unique identifier",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cities"
                ],
                "summary": "Delete a city",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "City ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid city ID",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "404": {
                        "description": "City not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/events": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a list of cultural events with pagination and filtering",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "List events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of events to retrieve",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of events to skip",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"created_at\"",
                        "description": "Field to sort by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"desc\"",
                        "description": "Sort order (asc/desc)",
                        "name": "sort_order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Events retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_cultural_models.ResponseEvent"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Failed to list events",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new cultural event to the system",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Create a new event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Event Name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event Description",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "City ID",
                        "name": "city_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Province ID",
                        "name": "province_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Location object as JSON (name, latitude, longitude)",
                        "name": "location",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Start Date (RFC3339 or YYYY-MM-DD)",
                        "name": "start_date",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End Date (RFC3339 or YYYY-MM-DD)",
                        "name": "end_date",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Is Kid Friendly",
                        "name": "is_kid_friendly",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Event Image",
                        "name": "image",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Event created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_cultural_models.ResponseEvent"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid event creation details",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/events/search": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Search cultural events by various criteria",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Search events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Search query (name, description, etc.)",
                        "name": "query",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of results to retrieve",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of results to skip",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"created_at\"",
                        "description": "Field to sort by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"desc\"",
                        "description": "Sort order (asc/desc)",
                        "name": "sort_order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Events found successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_cultural_models.ResponseEvent"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid search parameters",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/events/trending": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a list of trending events based on views",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Get trending events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of trending events to retrieve",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trending events retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_cultural_models.ResponseEvent"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve trending events",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/events/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a cultural event's details by its unique identifier",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Get event by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_cultural_models.ResponseEvent"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Event not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an existing cultural event's details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Update an event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Event Update Details",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_cultural_models.RequestEvent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_cultural_models.ResponseEvent"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid event update details",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "404": {
                        "description": "Event not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove a cultural event from the system by its unique identifier",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Delete an event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid event ID",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "404": {
                        "description": "Event not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/events/{id}/views": {
            "post": {
                "description": "Increment the view count for a specific event",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Update event views",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event views updated successfully",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid event ID",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/local-stories": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a list of local cultural stories with pagination and filtering",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Local Stories"
                ],
                "summary": "List local stories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of local stories to retrieve",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of local stories to skip",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"created_at\"",
                        "description": "Field to sort by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"desc\"",
                        "description": "Sort order (asc/desc)",
                        "name": "sort_order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Local stories retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_cultural_models.LocalStory"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Failed to list local stories",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new local cultural story to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Local Stories"
                ],
                "summary": "Create a new local story",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "description": "Local Story Information",
                        "name": "local_story",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_cultural_models.LocalStory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Local story created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_cultural_models.LocalStory"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid local story creation details",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/local-stories/search": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Search local cultural stories by various criteria",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Local Stories"
                ],
                "summary": "Search local stories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Search query (title, story text, etc.)",
                        "name": "query",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of results to retrieve",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of results to skip",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"created_at\"",
                        "description": "Field to sort by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"desc\"",
                        "description": "Sort order (asc/desc)",
                        "name": "sort_order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Local stories found successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_cultural_models.LocalStory"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid search parameters",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/local-stories/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an existing local cultural story's details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Local Stories"
                ],
                "summary": "Update a local story",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Local Story ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Local Story Update Details",
                        "name": "local_story",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_cultural_models.LocalStory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Local story updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_cultural_models.LocalStory"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid local story update details",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "404": {
                        "description": "Local story not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove a local cultural story from the system by its unique identifier",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Local Stories"
                ],
                "summary": "Delete a local story",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Local Story ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid local story ID",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "404": {
                        "description": "Local story not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/locations": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a list of locations with pagination and filtering",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "List locations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of locations to retrieve",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of locations to skip",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"created_at\"",
                        "description": "Field to sort by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"desc\"",
                        "description": "Sort order (asc/desc)",
                        "name": "sort_order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by city ID",
                        "name": "city_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Locations retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_place_models.Location"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Failed to list locations",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new location to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Create a new location",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "description": "Location Information",
                        "name": "location",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_place_models.Location"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Location created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_place_models.Location"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid location creation details",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/locations/search": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Search locations by various criteria",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Search locations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Search query (name, etc.)",
                        "name": "query",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of results to retrieve",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of results to skip",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"created_at\"",
                        "description": "Field to sort by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"desc\"",
                        "description": "Sort order (asc/desc)",
                        "name": "sort_order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by city ID",
                        "name": "city_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Locations found successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_place_models.Location"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid search parameters",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/locations/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a location's details by its unique identifier",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Get location by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Location ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_place_models.Location"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Location not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an existing location's details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Update a location",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Location ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Location Update Details",
                        "name": "location",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_place_models.Location"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_place_models.Location"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid location update details",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "404": {
                        "description": "Location not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove a location from the system by its unique identifier",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Delete a location",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Location ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid location ID",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "404": {
                        "description": "Location not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/messages": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a list of messages with pagination and filtering",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Messages"
                ],
                "summary": "List messages",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of messages to retrieve",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of messages to skip",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"created_at\"",
                        "description": "Field to sort by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"desc\"",
                        "description": "Sort order (asc/desc)",
                        "name": "sort_order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Messages retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.ResponseMessage"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Failed to list messages",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new message to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Messages"
                ],
                "summary": "Create a new message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "description": "Message Information",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.Message"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Message created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.ResponseMessage"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid message creation details",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/messages/search": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Search messages by various criteria",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Messages"
                ],
                "summary": "Search messages",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Search query (content, etc.)",
                        "name": "query",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of results to retrieve",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of results to skip",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"created_at\"",
                        "description": "Field to sort by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"desc\"",
                        "description": "Sort order (asc/desc)",
                        "name": "sort_order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Messages found successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.ResponseMessage"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid search parameters",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/messages/thread/{thread_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve all messages for a specific thread",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Messages"
                ],
                "summary": "Get messages by thread",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Thread ID",
                        "name": "thread_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Messages retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.ResponseMessage"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid thread ID",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/messages/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an existing message's details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Messages"
                ],
                "summary": "Update a message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Message ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Message Update Details",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.Message"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.ResponseMessage"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid message update details",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "404": {
                        "description": "Message not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove a message from the system by its unique identifier",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Messages"
                ],
                "summary": "Delete a message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Message ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid message ID",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "404": {
                        "description": "Message not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a list of user profiles with pagination and filtering",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Profiles"
                ],
                "summary": "List user profiles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of user profiles to retrieve",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of user profiles to skip",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"created_at\"",
                        "description": "Field to sort by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"desc\"",
                        "description": "Sort order (asc/desc)",
                        "name": "sort_order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profiles retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserProfile"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Failed to list user profiles",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Register a new user profile in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Profiles"
                ],
                "summary": "Create a new user profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "description": "User Profile Creation Details",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserProfileCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User profile created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserProfile"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid user profile creation details",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/profile/me": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve the user profile for the currently authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Profiles"
                ],
                "summary": "Get user profile for the authenticated user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserProfile"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "404": {
                        "description": "User profile not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/profile/search": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Search user profiles by various criteria",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Profiles"
                ],
                "summary": "Search user profiles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Search query (fullname, etc.)",
                        "name": "query",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of results to retrieve",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of results to skip",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profiles found successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserProfile"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid search parameters",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/profile/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a user profile by its profile ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Profiles"
                ],
                "summary": "Get user profile by profile ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "User Profile ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserProfile"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "User profile not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an existing user profile's details, including uploading an avatar file or identity image",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Profiles"
                ],
                "summary": "Update a user profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "User Profile ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User Profile Update Details",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserProfile"
                        }
                    },
                    {
                        "type": "file",
                        "description": "Avatar file",
                        "name": "avatar",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Identity image file",
                        "name": "identity_image",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profile updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserProfile"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid user profile update details",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "404": {
                        "description": "User profile not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove a user profile from the system by its unique identifier",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Profiles"
                ],
                "summary": "Delete a user profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "User Profile ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid user profile ID",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "404": {
                        "description": "User profile not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/provinces": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a list of provinces with pagination and filtering",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Provinces"
                ],
                "summary": "List provinces",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of provinces to retrieve",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of provinces to skip",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"created_at\"",
                        "description": "Field to sort by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"desc\"",
                        "description": "Sort order (asc/desc)",
                        "name": "sort_order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Provinces retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_place_models.Province"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Failed to list provinces",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new province to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Provinces"
                ],
                "summary": "Create a new province",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "description": "Province Information",
                        "name": "province",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_place_models.Province"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Province created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_place_models.Province"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid province creation details",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/provinces/search": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Search provinces by various criteria",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Provinces"
                ],
                "summary": "Search provinces",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Search query (name, etc.)",
                        "name": "query",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of results to retrieve",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of results to skip",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"created_at\"",
                        "description": "Field to sort by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"desc\"",
                        "description": "Sort order (asc/desc)",
                        "name": "sort_order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Provinces found successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_place_models.Province"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid search parameters",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/provinces/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a province's details by its unique identifier",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Provinces"
                ],
                "summary": "Get province by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Province ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Province retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_place_models.Province"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Province not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an existing province's details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Provinces"
                ],
                "summary": "Update a province",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Province ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Province Update Details",
                        "name": "province",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_place_models.Province"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Province updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_place_models.Province"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid province update details",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "404": {
                        "description": "Province not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove a province from the system by its unique identifier",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Provinces"
                ],
                "summary": "Delete a province",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Province ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid province ID",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "404": {
                        "description": "Province not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/threads": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a list of discussion threads with pagination and filtering",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Threads"
                ],
                "summary": "List threads",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of threads to retrieve",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of threads to skip",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"created_at\"",
                        "description": "Field to sort by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"desc\"",
                        "description": "Sort order (asc/desc)",
                        "name": "sort_order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Threads retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.Thread"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Failed to list threads",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new discussion thread to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Threads"
                ],
                "summary": "Create a new thread",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "description": "Thread Information",
                        "name": "thread",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.Thread"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Thread created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.Thread"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid thread creation details",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/threads/event/{event_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a thread associated with a specific event",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Threads"
                ],
                "summary": "Get thread by event ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Thread retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid event ID",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "404": {
                        "description": "Thread not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/threads/search": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Search discussion threads by various criteria",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Threads"
                ],
                "summary": "Search threads",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Search query (title, etc.)",
                        "name": "query",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of results to retrieve",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of results to skip",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"created_at\"",
                        "description": "Field to sort by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"desc\"",
                        "description": "Sort order (asc/desc)",
                        "name": "sort_order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Threads found successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.Thread"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid search parameters",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/threads/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a discussion thread's details by its unique identifier",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Threads"
                ],
                "summary": "Get thread by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Thread ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Thread retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.Thread"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Thread not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an existing discussion thread's details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Threads"
                ],
                "summary": "Update a thread",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Thread ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Thread Update Details",
                        "name": "thread",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.Thread"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Thread updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.Thread"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid thread update details",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "404": {
                        "description": "Thread not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove a discussion thread from the system by its unique identifier",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Threads"
                ],
                "summary": "Delete a thread",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Thread ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid thread ID",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "404": {
                        "description": "Thread not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/threads/{threadID}/join": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Allow a user to join an existing thread",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Threads"
                ],
                "summary": "Join a thread",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Thread ID",
                        "name": "threadID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully joined thread",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input parameters",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a list of users with pagination and filtering",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "List users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of users to retrieve",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of users to skip",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"created_at\"",
                        "description": "Field to sort by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"desc\"",
                        "description": "Sort order (asc/desc)",
                        "name": "sort_order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_users_models.User"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Failed to list users",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Register a new user in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "description": "User Registration Details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_users_models.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid user creation details",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/users/badges": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve badges for a specific user with pagination and filtering",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Badges"
                ],
                "summary": "Get user badges",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of badges to retrieve",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of badges to skip",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"created_at\"",
                        "description": "Field to sort by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"desc\"",
                        "description": "Sort order (asc/desc)",
                        "name": "sort_order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User badges retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserBadge"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid search parameters",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new badge to a user's profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Badges"
                ],
                "summary": "Assign a badge to a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "description": "Badge Assignment Details",
                        "name": "badge",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserBadgeCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Badge assigned successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserBadge"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid badge assignment details",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a specific badge from a user's profile",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Badges"
                ],
                "summary": "Remove a badge from a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Badge ID",
                        "name": "badge_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Badge removed successfully",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid user ID or badge ID",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/users/badges/count": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve the number of badges a user has",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Badges"
                ],
                "summary": "Count user badges",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User badge count retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/users/search": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Search users by various criteria",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Search users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Search query (email, name, etc.)",
                        "name": "query",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of results to retrieve",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of results to skip",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users found successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_users_models.User"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid search parameters",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a user's details by their unique identifier",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_users_models.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an existing user's details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User Update Details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_users_models.UserUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_users_models.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid user update details",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove a user from the system by their unique identifier",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token (without 'Bearer ' prefix)",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.APIResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "configs.Config": {
            "type": "object",
            "properties": {
                "database": {
                    "$ref": "#/definitions/configs.DatabaseConfig"
                },
                "environment": {
                    "type": "string"
                },
                "geminiAI": {
                    "$ref": "#/definitions/configs.GeminiAIConfig"
                },
                "logging": {
                    "$ref": "#/definitions/configs.LoggingConfig"
                },
                "server": {
                    "$ref": "#/definitions/configs.ServerConfig"
                },
                "supabase": {
                    "$ref": "#/definitions/configs.SupabaseConfig"
                }
            }
        },
        "configs.DatabaseConfig": {
            "type": "object",
            "properties": {
                "databaseName": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "poolMode": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "configs.GeminiAIConfig": {
            "type": "object",
            "properties": {
                "aimodel": {
                    "type": "string"
                },
                "apiKey": {
                    "type": "string"
                },
                "maxTokens": {
                    "type": "integer"
                },
                "temperature": {
                    "type": "number",
                    "format": "float32"
                },
                "topK": {
                    "type": "number",
                    "format": "float32"
                },
                "topP": {
                    "type": "number",
                    "format": "float32"
                }
            }
        },
        "configs.LoggingConfig": {
            "type": "object",
            "properties": {
                "compress": {
                    "type": "boolean"
                },
                "filePath": {
                    "type": "string"
                },
                "level": {
                    "type": "string"
                },
                "maxAge": {
                    "type": "integer"
                },
                "maxBackups": {
                    "type": "integer"
                },
                "maxSize": {
                    "type": "integer"
                }
            }
        },
        "configs.ServerConfig": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "productionDomain": {
                    "type": "string"
                },
                "readTimeout": {
                    "type": "integer"
                },
                "shutdownTimeout": {
                    "type": "integer"
                },
                "writeTimeout": {
                    "type": "integer"
                }
            }
        },
        "configs.SupabaseConfig": {
            "type": "object",
            "properties": {
                "apiPublicKey": {
                    "type": "string"
                },
                "apiSecretKey": {
                    "type": "string"
                },
                "defaultFolder": {
                    "type": "string"
                },
                "jwtApiKeySecret": {
                    "type": "string"
                },
                "projectID": {
                    "type": "string"
                },
                "storageBucketID": {
                    "type": "string"
                }
            }
        },
        "github_com_holycann_cultour-backend_internal_achievement_models.Badge": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "icon_url": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "github_com_holycann_cultour-backend_internal_achievement_models.BadgeCreate": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "icon_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "github_com_holycann_cultour-backend_internal_cultural_models.LocalStory": {
            "type": "object",
            "properties": {
                "audio_url": {
                    "type": "string"
                },
                "city_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "is_for_kids": {
                    "type": "boolean",
                    "example": true
                },
                "language": {
                    "type": "string",
                    "example": "EN"
                },
                "location_id": {
                    "type": "string"
                },
                "origin_culture": {
                    "type": "string",
                    "example": "Sunda"
                },
                "story_text": {
                    "type": "string"
                },
                "summary": {
                    "type": "string",
                    "example": "Story about the origin of Tangkuban Perahu"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string",
                    "example": "Legend of Sangkuriang"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "github_com_holycann_cultour-backend_internal_cultural_models.RequestEvent": {
            "type": "object",
            "properties": {
                "city_id": {
                    "description": "Reference to city ID",
                    "type": "string"
                },
                "created_at": {
                    "description": "Event creation time",
                    "type": "string"
                },
                "description": {
                    "description": "Event description",
                    "type": "string"
                },
                "end_date": {
                    "description": "Event end date",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier for the event",
                    "type": "string"
                },
                "image_url": {
                    "description": "Event image URL",
                    "type": "string"
                },
                "is_kid_friendly": {
                    "description": "Whether the event is kid-friendly",
                    "type": "boolean"
                },
                "location": {
                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_place_models.Location"
                },
                "location_id": {
                    "description": "Reference to location ID",
                    "type": "string"
                },
                "name": {
                    "description": "Event name",
                    "type": "string"
                },
                "province_id": {
                    "description": "Reference to province ID",
                    "type": "string"
                },
                "start_date": {
                    "description": "Event start date",
                    "type": "string"
                },
                "updated_at": {
                    "description": "Event last update time",
                    "type": "string"
                },
                "user_id": {
                    "description": "ID of the user who created the event",
                    "type": "string"
                }
            }
        },
        "github_com_holycann_cultour-backend_internal_cultural_models.ResponseEvent": {
            "type": "object",
            "properties": {
                "city": {
                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_place_models.City"
                },
                "city_id": {
                    "description": "Reference to city ID",
                    "type": "string"
                },
                "created_at": {
                    "description": "Event creation time",
                    "type": "string"
                },
                "description": {
                    "description": "Event description",
                    "type": "string"
                },
                "end_date": {
                    "description": "Event end date",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier for the event",
                    "type": "string"
                },
                "image_url": {
                    "description": "Event image URL",
                    "type": "string"
                },
                "is_kid_friendly": {
                    "description": "Whether the event is kid-friendly",
                    "type": "boolean"
                },
                "location": {
                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_place_models.Location"
                },
                "location_id": {
                    "description": "Reference to location ID",
                    "type": "string"
                },
                "name": {
                    "description": "Event name",
                    "type": "string"
                },
                "province": {
                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_place_models.Province"
                },
                "province_id": {
                    "description": "Reference to province ID",
                    "type": "string"
                },
                "start_date": {
                    "description": "Event start date",
                    "type": "string"
                },
                "updated_at": {
                    "description": "Event last update time",
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_users_models.User"
                },
                "user_id": {
                    "description": "ID of the user who created the event",
                    "type": "string"
                },
                "views": {
                    "type": "integer"
                }
            }
        },
        "github_com_holycann_cultour-backend_internal_discussion_models.Message": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "content": {
                    "description": "Message content",
                    "type": "string"
                },
                "created_at": {
                    "description": "Message creation time",
                    "type": "string"
                },
                "id": {
                    "description": "Unique ID for the message",
                    "type": "string"
                },
                "thread_id": {
                    "description": "ID of the thread the message belongs to",
                    "type": "string"
                },
                "type": {
                    "description": "Type of message",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.MessageType"
                        }
                    ]
                },
                "updated_at": {
                    "description": "Message last update time",
                    "type": "string"
                },
                "user_id": {
                    "description": "ID of the user who sent the message",
                    "type": "string"
                }
            }
        },
        "github_com_holycann_cultour-backend_internal_discussion_models.MessageType": {
            "type": "string",
            "enum": [
                "discussion",
                "ai"
            ],
            "x-enum-varnames": [
                "DiscussionMessageType",
                "AIMessageType"
            ]
        },
        "github_com_holycann_cultour-backend_internal_discussion_models.ResponseMessage": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "content": {
                    "description": "Message content",
                    "type": "string"
                },
                "created_at": {
                    "description": "Message creation time",
                    "type": "string"
                },
                "id": {
                    "description": "Unique ID for the message",
                    "type": "string"
                },
                "thread_id": {
                    "description": "ID of the thread the message belongs to",
                    "type": "string"
                },
                "type": {
                    "description": "Type of message",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_discussion_models.MessageType"
                        }
                    ]
                },
                "updated_at": {
                    "description": "Message last update time",
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_users_models.User"
                },
                "user_id": {
                    "description": "ID of the user who sent the message",
                    "type": "string"
                }
            }
        },
        "github_com_holycann_cultour-backend_internal_discussion_models.Thread": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Thread creation time",
                    "type": "string"
                },
                "creator_id": {
                    "description": "Reference to the user who created the thread",
                    "type": "string"
                },
                "event_id": {
                    "description": "Reference to related event",
                    "type": "string"
                },
                "id": {
                    "description": "Unique ID for the thread",
                    "type": "string"
                },
                "status": {
                    "description": "Thread status",
                    "type": "string",
                    "example": "active"
                },
                "updated_at": {
                    "description": "Thread last update time",
                    "type": "string"
                }
            }
        },
        "github_com_holycann_cultour-backend_internal_place_models.City": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "City creation time",
                    "type": "string"
                },
                "id": {
                    "description": "Unique ID for the city",
                    "type": "string"
                },
                "image_url": {
                    "description": "URL of the city's image",
                    "type": "string"
                },
                "name": {
                    "description": "City name, example: \"Jakarta\"",
                    "type": "string",
                    "example": "Jakarta"
                },
                "province_id": {
                    "description": "ID of the province where the city is located",
                    "type": "string"
                },
                "updated_at": {
                    "description": "City last update time",
                    "type": "string"
                }
            }
        },
        "github_com_holycann_cultour-backend_internal_place_models.Location": {
            "type": "object",
            "properties": {
                "city_id": {
                    "description": "Reference to the city ID",
                    "type": "string"
                },
                "created_at": {
                    "description": "Location creation time",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier for the location",
                    "type": "string"
                },
                "latitude": {
                    "description": "Latitude in decimal degrees",
                    "type": "number",
                    "example": -6.175392
                },
                "longitude": {
                    "description": "Longitude in decimal degrees",
                    "type": "number",
                    "example": 106.827153
                },
                "name": {
                    "description": "Name of the location",
                    "type": "string",
                    "example": "Monas"
                },
                "updated_at": {
                    "description": "Location last update time",
                    "type": "string"
                }
            }
        },
        "github_com_holycann_cultour-backend_internal_place_models.Province": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Province creation time",
                    "type": "string"
                },
                "description": {
                    "description": "Province description",
                    "type": "string"
                },
                "id": {
                    "description": "Unique ID for the province",
                    "type": "string"
                },
                "name": {
                    "description": "Province name, example: \"West Java\"",
                    "type": "string",
                    "example": "West Java"
                },
                "updated_at": {
                    "description": "Province last update time",
                    "type": "string"
                }
            }
        },
        "github_com_holycann_cultour-backend_internal_response.APIResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Actual response data"
                },
                "error": {
                    "description": "Detailed error information (only populated for error responses)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.ErrorDetails"
                        }
                    ]
                },
                "message": {
                    "description": "Human-readable message",
                    "type": "string"
                },
                "pagination": {
                    "description": "Pagination information (optional)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_holycann_cultour-backend_internal_response.Pagination"
                        }
                    ]
                },
                "request_id": {
                    "description": "Unique request identifier for tracing",
                    "type": "string"
                },
                "success": {
                    "description": "Status of the response (success/error)",
                    "type": "boolean"
                }
            }
        },
        "github_com_holycann_cultour-backend_internal_response.ErrorDetails": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Machine-readable error code",
                    "type": "string"
                },
                "details": {
                    "description": "Detailed error description",
                    "type": "string"
                }
            }
        },
        "github_com_holycann_cultour-backend_internal_response.Pagination": {
            "type": "object",
            "properties": {
                "has_next_page": {
                    "type": "boolean"
                },
                "page": {
                    "type": "integer"
                },
                "per_page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "github_com_holycann_cultour-backend_internal_users_models.User": {
            "description": "User account details with authentication and metadata",
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "created_at": {
                    "description": "Timestamp when the user account was created",
                    "type": "string"
                },
                "deleted_at": {
                    "description": "Timestamp of user account soft deletion",
                    "type": "string"
                },
                "email": {
                    "description": "User's email address\n@example \"user@example.com\"",
                    "type": "string",
                    "example": "admin@gmail.com"
                },
                "id": {
                    "description": "Unique identifier for the user\n@example \"user_123\"",
                    "type": "string",
                    "example": "user_123"
                },
                "last_sign_in_at": {
                    "description": "Timestamp of the last user sign-in",
                    "type": "string"
                },
                "phone": {
                    "description": "User's phone number\n@example \"+1234567890\"",
                    "type": "string",
                    "example": "+1234567890"
                },
                "role": {
                    "description": "User's role in the system\n@example \"user\"\n@enums \"user\",\"admin\",\"moderator\"",
                    "type": "string",
                    "enum": [
                        "user",
                        "admin",
                        "moderator"
                    ],
                    "example": "user"
                },
                "updated_at": {
                    "description": "Timestamp of the last user account update",
                    "type": "string"
                }
            }
        },
        "github_com_holycann_cultour-backend_internal_users_models.UserBadge": {
            "description": "Badge information associated with a user",
            "type": "object",
            "required": [
                "badge_id",
                "user_id"
            ],
            "properties": {
                "badge_id": {
                    "description": "Badge identifier\n@example \"explorer\"",
                    "type": "string"
                },
                "created_at": {
                    "description": "Timestamp when the badge was earned",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier for the user badge\n@example \"user_badge_123\"",
                    "type": "string"
                },
                "user_id": {
                    "description": "Associated user ID\n@example \"user_123\"",
                    "type": "string"
                }
            }
        },
        "github_com_holycann_cultour-backend_internal_users_models.UserBadgeCreate": {
            "description": "Payload for assigning a badge to a user",
            "type": "object",
            "required": [
                "badge_id",
                "user_id"
            ],
            "properties": {
                "badge_id": {
                    "description": "Badge identifier\n@example \"explorer\"",
                    "type": "string"
                },
                "user_id": {
                    "description": "Associated user ID\n@example \"user_123\"",
                    "type": "string"
                }
            }
        },
        "github_com_holycann_cultour-backend_internal_users_models.UserCreate": {
            "description": "Payload for user registration",
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "description": "User's email address\n@example \"user@example.com\"",
                    "type": "string",
                    "example": "admin@gmail.com"
                },
                "password": {
                    "description": "User's password\n@example \"securePassword123!\"",
                    "type": "string",
                    "minLength": 8,
                    "example": "admin123"
                },
                "role": {
                    "description": "User's role in the system\n@example \"user\"\n@enums \"user\",\"admin\",\"moderator\"",
                    "type": "string",
                    "enum": [
                        "user",
                        "admin",
                        "moderator"
                    ],
                    "example": "user"
                }
            }
        },
        "github_com_holycann_cultour-backend_internal_users_models.UserProfile": {
            "description": "Detailed user profile with additional personal information, including identity (KTP) data",
            "type": "object",
            "required": [
                "fullname",
                "user_id"
            ],
            "properties": {
                "avatar_url": {
                    "description": "URL to user's avatar image\n@example \"https://example.com/avatar.jpg\"",
                    "type": "string",
                    "format": "uri"
                },
                "bio": {
                    "description": "User's biographical information\n@example \"Software engineer passionate about building great products\"",
                    "type": "string"
                },
                "created_at": {
                    "description": "Timestamp when the profile was created",
                    "type": "string"
                },
                "fullname": {
                    "description": "User's full name\n@example \"John Doe\"",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier for the user profile\n@example \"profile_123\"",
                    "type": "string"
                },
                "identity_image_url": {
                    "description": "URL to uploaded KTP image\n@example \"https://example.com/ktp.jpg\"",
                    "type": "string",
                    "format": "uri"
                },
                "updated_at": {
                    "description": "Timestamp when the profile was last updated",
                    "type": "string"
                },
                "user_id": {
                    "description": "Associated user ID\n@example \"user_123\"",
                    "type": "string"
                }
            }
        },
        "github_com_holycann_cultour-backend_internal_users_models.UserProfileCreate": {
            "description": "Payload for creating a user profile, including identity (KTP) data",
            "type": "object",
            "required": [
                "fullname",
                "user_id"
            ],
            "properties": {
                "avatar_url": {
                    "description": "URL to user's avatar image\n@example \"https://example.com/avatar.jpg\"",
                    "type": "string",
                    "format": "uri"
                },
                "bio": {
                    "description": "User's biographical information\n@example \"Software engineer passionate about building great products\"",
                    "type": "string"
                },
                "fullname": {
                    "description": "User's full name\n@example \"John Doe\"",
                    "type": "string"
                },
                "identity_image_url": {
                    "description": "URL to uploaded KTP image\n@example \"https://example.com/ktp.jpg\"",
                    "type": "string",
                    "format": "uri"
                },
                "user_id": {
                    "description": "Associated user ID\n@example \"user_123\"",
                    "type": "string"
                }
            }
        },
        "github_com_holycann_cultour-backend_internal_users_models.UserUpdate": {
            "description": "Payload for updating user information",
            "type": "object",
            "properties": {
                "email": {
                    "description": "User's email address (optional)\n@example \"newemail@example.com\"",
                    "type": "string",
                    "example": "newemail@example.com"
                },
                "role": {
                    "description": "User's role in the system (optional)\n@example \"admin\"\n@enums \"user\",\"admin\",\"moderator\"",
                    "type": "string",
                    "enum": [
                        "user",
                        "admin",
                        "moderator"
                    ],
                    "example": "admin"
                }
            }
        },
        "internal_gemini.CreateChatSessionRequest": {
            "description": "Request to create a new AI chat session",
            "type": "object",
            "required": [
                "user_id"
            ],
            "properties": {
                "event_id": {
                    "description": "Optional EventID to provide context for the chat session",
                    "type": "string"
                },
                "user_id": {
                    "description": "UserID is the unique identifier of the user creating the session\n@Required true",
                    "type": "string"
                }
            }
        },
        "internal_gemini.CreateChatSessionResponse": {
            "description": "Response containing the created session ID",
            "type": "object",
            "properties": {
                "session_id": {
                    "description": "Unique identifier for the created chat session",
                    "type": "string"
                }
            }
        },
        "internal_gemini.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "details": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "internal_gemini.EventDescriptionResponse": {
            "description": "Response containing an AI-generated description for an event",
            "type": "object",
            "properties": {
                "description": {
                    "description": "Comprehensive description of the event",
                    "type": "string"
                }
            }
        },
        "internal_gemini.SendMessageRequest": {
            "description": "Request to send a message to the AI",
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "description": "Message content to be sent to the AI\n@Required true\n@Max length 500",
                    "type": "string",
                    "maxLength": 500
                }
            }
        },
        "internal_gemini.SendMessageResponse": {
            "description": "Response from the AI containing multiple lines of text",
            "type": "object",
            "properties": {
                "response": {
                    "description": "Multiple lines of the AI's response",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Insert Your JWT Token. Do NOT include \"Bearer \" prefix. Example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}